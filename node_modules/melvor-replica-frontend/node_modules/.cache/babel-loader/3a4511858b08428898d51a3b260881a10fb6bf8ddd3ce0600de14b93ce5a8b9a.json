{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";/**\r\n * CombatStats component - Calculates and displays combat statistics based on equipped items\r\n */const CombatStats=_ref=>{let{equipment}=_ref;/**\r\n   * Calculate the total value for a specific stat from all equipped items\r\n   */const calculateTotalStat=statName=>{var _equipment$weapon,_equipment$weapon$sta,_equipment$armor,_equipment$armor$stat;let total=0;if((_equipment$weapon=equipment.weapon)!==null&&_equipment$weapon!==void 0&&(_equipment$weapon$sta=_equipment$weapon.stats)!==null&&_equipment$weapon$sta!==void 0&&_equipment$weapon$sta[statName]){total+=equipment.weapon.stats[statName]||0;}if((_equipment$armor=equipment.armor)!==null&&_equipment$armor!==void 0&&(_equipment$armor$stat=_equipment$armor.stats)!==null&&_equipment$armor$stat!==void 0&&_equipment$armor$stat[statName]){total+=equipment.armor.stats[statName]||0;}return total;};return/*#__PURE__*/_jsxs(\"div\",{className:\"equipment-stats\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Combat Stats\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Attack: \",calculateTotalStat('attackBonus')]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Strength: \",calculateTotalStat('strengthBonus')]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Defense: \",calculateTotalStat('defenseBonus')]})]});};export default CombatStats;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","CombatStats","_ref","equipment","calculateTotalStat","statName","_equipment$weapon","_equipment$weapon$sta","_equipment$armor","_equipment$armor$stat","total","weapon","stats","armor","className","children"],"sources":["C:/Users/Domin/OneDrive/Desktop/coding/WaveringTides/frontend/src/features/equipment/CombatStats.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Item } from '../../types';\r\n\r\ninterface CombatStatsProps {\r\n  equipment: {\r\n    weapon?: Item;\r\n    armor?: Item;\r\n  };\r\n}\r\n\r\n/**\r\n * CombatStats component - Calculates and displays combat statistics based on equipped items\r\n */\r\nconst CombatStats: React.FC<CombatStatsProps> = ({ equipment }) => {\r\n  /**\r\n   * Calculate the total value for a specific stat from all equipped items\r\n   */\r\n  const calculateTotalStat = (statName: 'attackBonus' | 'strengthBonus' | 'defenseBonus'): number => {\r\n    let total = 0;\r\n    \r\n    if (equipment.weapon?.stats?.[statName]) {\r\n      total += equipment.weapon.stats[statName] || 0;\r\n    }\r\n    \r\n    if (equipment.armor?.stats?.[statName]) {\r\n      total += equipment.armor.stats[statName] || 0;\r\n    }\r\n    \r\n    return total;\r\n  };\r\n\r\n  return (\r\n    <div className=\"equipment-stats\">\r\n      <h3>Combat Stats</h3>\r\n      <p>Attack: {calculateTotalStat('attackBonus')}</p>\r\n      <p>Strength: {calculateTotalStat('strengthBonus')}</p>\r\n      <p>Defense: {calculateTotalStat('defenseBonus')}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CombatStats; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAU1B;AACA;AACA,GACA,KAAM,CAAAC,WAAuC,CAAGC,IAAA,EAAmB,IAAlB,CAAEC,SAAU,CAAC,CAAAD,IAAA,CAC5D;AACF;AACA,KACE,KAAM,CAAAE,kBAAkB,CAAIC,QAA0D,EAAa,KAAAC,iBAAA,CAAAC,qBAAA,CAAAC,gBAAA,CAAAC,qBAAA,CACjG,GAAI,CAAAC,KAAK,CAAG,CAAC,CAEb,IAAAJ,iBAAA,CAAIH,SAAS,CAACQ,MAAM,UAAAL,iBAAA,YAAAC,qBAAA,CAAhBD,iBAAA,CAAkBM,KAAK,UAAAL,qBAAA,WAAvBA,qBAAA,CAA0BF,QAAQ,CAAC,CAAE,CACvCK,KAAK,EAAIP,SAAS,CAACQ,MAAM,CAACC,KAAK,CAACP,QAAQ,CAAC,EAAI,CAAC,CAChD,CAEA,IAAAG,gBAAA,CAAIL,SAAS,CAACU,KAAK,UAAAL,gBAAA,YAAAC,qBAAA,CAAfD,gBAAA,CAAiBI,KAAK,UAAAH,qBAAA,WAAtBA,qBAAA,CAAyBJ,QAAQ,CAAC,CAAE,CACtCK,KAAK,EAAIP,SAAS,CAACU,KAAK,CAACD,KAAK,CAACP,QAAQ,CAAC,EAAI,CAAC,CAC/C,CAEA,MAAO,CAAAK,KAAK,CACd,CAAC,CAED,mBACEV,KAAA,QAAKc,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BjB,IAAA,OAAAiB,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBf,KAAA,MAAAe,QAAA,EAAG,UAAQ,CAACX,kBAAkB,CAAC,aAAa,CAAC,EAAI,CAAC,cAClDJ,KAAA,MAAAe,QAAA,EAAG,YAAU,CAACX,kBAAkB,CAAC,eAAe,CAAC,EAAI,CAAC,cACtDJ,KAAA,MAAAe,QAAA,EAAG,WAAS,CAACX,kBAAkB,CAAC,cAAc,CAAC,EAAI,CAAC,EACjD,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}