{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Domin\\\\OneDrive\\\\Desktop\\\\coding\\\\WaveringTides\\\\frontend\\\\src\\\\features\\\\skills\\\\SkillProgressBar.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\r\n * SkillProgressBar component - Visual representation of skill progression\r\n */\nconst SkillProgressBar = ({\n  currentXp,\n  requiredXp\n}) => {\n  // Calculate percentage progress\n  const progressPercentage = Math.min(Math.floor(currentXp / requiredXp * 100), 100);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"skill-progress\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-fill\",\n        style: {\n          width: `${progressPercentage}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-text\",\n      children: [currentXp, \" / \", requiredXp, \" XP (\", progressPercentage, \"%)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = SkillProgressBar;\nexport default SkillProgressBar;\nvar _c;\n$RefreshReg$(_c, \"SkillProgressBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SkillProgressBar","currentXp","requiredXp","progressPercentage","Math","min","floor","className","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Domin/OneDrive/Desktop/coding/WaveringTides/frontend/src/features/skills/SkillProgressBar.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface SkillProgressBarProps {\r\n  currentXp: number;\r\n  requiredXp: number;\r\n}\r\n\r\n/**\r\n * SkillProgressBar component - Visual representation of skill progression\r\n */\r\nconst SkillProgressBar: React.FC<SkillProgressBarProps> = ({ currentXp, requiredXp }) => {\r\n  // Calculate percentage progress\r\n  const progressPercentage = Math.min(Math.floor((currentXp / requiredXp) * 100), 100);\r\n  \r\n  return (\r\n    <div className=\"skill-progress\">\r\n      <div className=\"progress-bar\">\r\n        <div \r\n          className=\"progress-fill\"\r\n          style={{ width: `${progressPercentage}%` }} \r\n        />\r\n      </div>\r\n      <div className=\"progress-text\">\r\n        {currentXp} / {requiredXp} XP ({progressPercentage}%)\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkillProgressBar; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B;AACA;AACA;AACA,MAAMC,gBAAiD,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAW,CAAC,KAAK;EACvF;EACA,MAAMC,kBAAkB,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,KAAK,CAAEL,SAAS,GAAGC,UAAU,GAAI,GAAG,CAAC,EAAE,GAAG,CAAC;EAEpF,oBACEH,OAAA;IAAKQ,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BT,OAAA;MAAKQ,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3BT,OAAA;QACEQ,SAAS,EAAC,eAAe;QACzBE,KAAK,EAAE;UAAEC,KAAK,EAAE,GAAGP,kBAAkB;QAAI;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNf,OAAA;MAAKQ,SAAS,EAAC,eAAe;MAAAC,QAAA,GAC3BP,SAAS,EAAC,KAAG,EAACC,UAAU,EAAC,OAAK,EAACC,kBAAkB,EAAC,IACrD;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GAjBIf,gBAAiD;AAmBvD,eAAeA,gBAAgB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}