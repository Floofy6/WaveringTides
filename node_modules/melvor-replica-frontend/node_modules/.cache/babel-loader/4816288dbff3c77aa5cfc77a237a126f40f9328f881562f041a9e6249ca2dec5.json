{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useGameContext } from '../context/GameContext';\nexport const useShop = () => {\n  _s();\n  const {\n    gameState,\n    updateGameState\n  } = useGameContext();\n  const buyItem = (item, quantity) => {\n    if (!gameState) return;\n    if (!item.buyPrice) return;\n    const totalCost = item.buyPrice * quantity;\n    if (gameState.player.gold < totalCost) return;\n    updateGameState(prevState => {\n      if (!prevState) return prevState;\n      const newInventory = {\n        ...prevState.player.inventory\n      };\n\n      // Add item to inventory\n      if (newInventory[item.id]) {\n        newInventory[item.id] = {\n          ...newInventory[item.id],\n          quantity: newInventory[item.id].quantity + quantity\n        };\n      } else {\n        newInventory[item.id] = {\n          ...item,\n          quantity\n        };\n      }\n\n      // Deduct gold\n      const newGold = prevState.player.gold - totalCost;\n      return {\n        ...prevState,\n        player: {\n          ...prevState.player,\n          gold: newGold,\n          inventory: newInventory\n        }\n      };\n    });\n  };\n  return {\n    gold: (gameState === null || gameState === void 0 ? void 0 : gameState.player.gold) || 0,\n    buyItem\n  };\n};\n_s(useShop, \"18xgbNVGWidCo/sWQzm7FstYldI=\", false, function () {\n  return [useGameContext];\n});","map":{"version":3,"names":["useGameContext","useShop","_s","gameState","updateGameState","buyItem","item","quantity","buyPrice","totalCost","player","gold","prevState","newInventory","inventory","id","newGold"],"sources":["C:/Users/Domin/OneDrive/Desktop/coding/WaveringTides/frontend/src/hooks/useShop.ts"],"sourcesContent":["import { useGameContext } from '../context/GameContext';\r\nimport { GameState, Item } from '../types';\r\n\r\nexport const useShop = () => {\r\n  const { gameState, updateGameState } = useGameContext();\r\n  \r\n  const buyItem = (item: Item, quantity: number) => {\r\n    if (!gameState) return;\r\n    \r\n    if (!item.buyPrice) return;\r\n    \r\n    const totalCost = item.buyPrice * quantity;\r\n    if (gameState.player.gold < totalCost) return;\r\n    \r\n    updateGameState((prevState: GameState | null) => {\r\n      if (!prevState) return prevState;\r\n      \r\n      const newInventory = { ...prevState.player.inventory };\r\n      \r\n      // Add item to inventory\r\n      if (newInventory[item.id]) {\r\n        newInventory[item.id] = {\r\n          ...newInventory[item.id],\r\n          quantity: newInventory[item.id].quantity + quantity\r\n        };\r\n      } else {\r\n        newInventory[item.id] = {\r\n          ...item,\r\n          quantity\r\n        };\r\n      }\r\n      \r\n      // Deduct gold\r\n      const newGold = prevState.player.gold - totalCost;\r\n      \r\n      return {\r\n        ...prevState,\r\n        player: {\r\n          ...prevState.player,\r\n          gold: newGold,\r\n          inventory: newInventory\r\n        }\r\n      };\r\n    });\r\n  };\r\n  \r\n  return {\r\n    gold: gameState?.player.gold || 0,\r\n    buyItem\r\n  };\r\n}; "],"mappings":";AAAA,SAASA,cAAc,QAAQ,wBAAwB;AAGvD,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,SAAS;IAAEC;EAAgB,CAAC,GAAGJ,cAAc,CAAC,CAAC;EAEvD,MAAMK,OAAO,GAAGA,CAACC,IAAU,EAAEC,QAAgB,KAAK;IAChD,IAAI,CAACJ,SAAS,EAAE;IAEhB,IAAI,CAACG,IAAI,CAACE,QAAQ,EAAE;IAEpB,MAAMC,SAAS,GAAGH,IAAI,CAACE,QAAQ,GAAGD,QAAQ;IAC1C,IAAIJ,SAAS,CAACO,MAAM,CAACC,IAAI,GAAGF,SAAS,EAAE;IAEvCL,eAAe,CAAEQ,SAA2B,IAAK;MAC/C,IAAI,CAACA,SAAS,EAAE,OAAOA,SAAS;MAEhC,MAAMC,YAAY,GAAG;QAAE,GAAGD,SAAS,CAACF,MAAM,CAACI;MAAU,CAAC;;MAEtD;MACA,IAAID,YAAY,CAACP,IAAI,CAACS,EAAE,CAAC,EAAE;QACzBF,YAAY,CAACP,IAAI,CAACS,EAAE,CAAC,GAAG;UACtB,GAAGF,YAAY,CAACP,IAAI,CAACS,EAAE,CAAC;UACxBR,QAAQ,EAAEM,YAAY,CAACP,IAAI,CAACS,EAAE,CAAC,CAACR,QAAQ,GAAGA;QAC7C,CAAC;MACH,CAAC,MAAM;QACLM,YAAY,CAACP,IAAI,CAACS,EAAE,CAAC,GAAG;UACtB,GAAGT,IAAI;UACPC;QACF,CAAC;MACH;;MAEA;MACA,MAAMS,OAAO,GAAGJ,SAAS,CAACF,MAAM,CAACC,IAAI,GAAGF,SAAS;MAEjD,OAAO;QACL,GAAGG,SAAS;QACZF,MAAM,EAAE;UACN,GAAGE,SAAS,CAACF,MAAM;UACnBC,IAAI,EAAEK,OAAO;UACbF,SAAS,EAAED;QACb;MACF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,OAAO;IACLF,IAAI,EAAE,CAAAR,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEO,MAAM,CAACC,IAAI,KAAI,CAAC;IACjCN;EACF,CAAC;AACH,CAAC;AAACH,EAAA,CA/CWD,OAAO;EAAA,QACqBD,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}