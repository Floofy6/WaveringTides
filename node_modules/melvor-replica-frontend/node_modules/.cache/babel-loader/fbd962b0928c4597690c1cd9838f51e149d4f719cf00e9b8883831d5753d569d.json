{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Domin\\\\OneDrive\\\\Desktop\\\\coding\\\\WaveringTides\\\\frontend\\\\src\\\\features\\\\skills\\\\SkillProgressBar.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\r\n * SkillProgressBar component - Visual representation of skill progression\r\n */\nconst SkillProgressBar = ({\n  skill\n}) => {\n  // Calculate required XP for next level\n  const requiredXp = calculateXpForNextLevel(skill.level);\n\n  // Calculate percentage progress\n  const progressPercentage = Math.min(Math.floor(skill.xp / requiredXp * 100), 100);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"skill-progress\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skill-progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skill-progress-fill\",\n        style: {\n          width: `${progressPercentage}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skill-progress-text\",\n      children: [skill.xp, \" / \", requiredXp, \" XP (\", progressPercentage, \"%)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n/**\r\n * Calculate the XP required for the next level\r\n * This is a simple formula that can be adjusted as needed\r\n */\n_c = SkillProgressBar;\nconst calculateXpForNextLevel = currentLevel => {\n  // Example formula: base 100 XP with 10% increase per level\n  return Math.floor(100 * Math.pow(1.1, currentLevel - 1));\n};\nexport default SkillProgressBar;\nvar _c;\n$RefreshReg$(_c, \"SkillProgressBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SkillProgressBar","skill","requiredXp","calculateXpForNextLevel","level","progressPercentage","Math","min","floor","xp","className","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","currentLevel","pow","$RefreshReg$"],"sources":["C:/Users/Domin/OneDrive/Desktop/coding/WaveringTides/frontend/src/features/skills/SkillProgressBar.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Skill } from '../../types';\r\n\r\ninterface SkillProgressBarProps {\r\n  skill: Skill;\r\n}\r\n\r\n/**\r\n * SkillProgressBar component - Visual representation of skill progression\r\n */\r\nconst SkillProgressBar: React.FC<SkillProgressBarProps> = ({ skill }) => {\r\n  // Calculate required XP for next level\r\n  const requiredXp = calculateXpForNextLevel(skill.level);\r\n  \r\n  // Calculate percentage progress\r\n  const progressPercentage = Math.min(Math.floor((skill.xp / requiredXp) * 100), 100);\r\n  \r\n  return (\r\n    <div className=\"skill-progress\">\r\n      <div className=\"skill-progress-bar\">\r\n        <div \r\n          className=\"skill-progress-fill\"\r\n          style={{ width: `${progressPercentage}%` }} \r\n        />\r\n      </div>\r\n      <div className=\"skill-progress-text\">\r\n        {skill.xp} / {requiredXp} XP ({progressPercentage}%)\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * Calculate the XP required for the next level\r\n * This is a simple formula that can be adjusted as needed\r\n */\r\nconst calculateXpForNextLevel = (currentLevel: number): number => {\r\n  // Example formula: base 100 XP with 10% increase per level\r\n  return Math.floor(100 * Math.pow(1.1, currentLevel - 1));\r\n};\r\n\r\nexport default SkillProgressBar; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B;AACA;AACA;AACA,MAAMC,gBAAiD,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EACvE;EACA,MAAMC,UAAU,GAAGC,uBAAuB,CAACF,KAAK,CAACG,KAAK,CAAC;;EAEvD;EACA,MAAMC,kBAAkB,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,KAAK,CAAEP,KAAK,CAACQ,EAAE,GAAGP,UAAU,GAAI,GAAG,CAAC,EAAE,GAAG,CAAC;EAEnF,oBACEH,OAAA;IAAKW,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BZ,OAAA;MAAKW,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eACjCZ,OAAA;QACEW,SAAS,EAAC,qBAAqB;QAC/BE,KAAK,EAAE;UAAEC,KAAK,EAAE,GAAGR,kBAAkB;QAAI;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNlB,OAAA;MAAKW,SAAS,EAAC,qBAAqB;MAAAC,QAAA,GACjCV,KAAK,CAACQ,EAAE,EAAC,KAAG,EAACP,UAAU,EAAC,OAAK,EAACG,kBAAkB,EAAC,IACpD;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AACA;AACA;AACA;AAHAC,EAAA,GAtBMlB,gBAAiD;AA0BvD,MAAMG,uBAAuB,GAAIgB,YAAoB,IAAa;EAChE;EACA,OAAOb,IAAI,CAACE,KAAK,CAAC,GAAG,GAAGF,IAAI,CAACc,GAAG,CAAC,GAAG,EAAED,YAAY,GAAG,CAAC,CAAC,CAAC;AAC1D,CAAC;AAED,eAAenB,gBAAgB;AAAC,IAAAkB,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}