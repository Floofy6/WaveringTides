{"ast":null,"code":"import axios from'axios';const API_URL=process.env.REACT_APP_API_URL||'http://localhost:3001/api';// Set default player ID\nconst DEFAULT_PLAYER_ID='player1';// Get player ID from localStorage or use default\nconst getPlayerId=()=>localStorage.getItem('playerId')||DEFAULT_PLAYER_ID;// Create axios instance with default config\nconst axiosInstance=axios.create({baseURL:API_URL,timeout:10000,// 10 second timeout\nheaders:{'Content-Type':'application/json'}});// Add response interceptor for error handling\naxiosInstance.interceptors.response.use(response=>response,error=>{console.error('API Error:',error.message);if(error.response){console.error('Response data:',error.response.data);}return Promise.reject(error);});const api={getGame:async()=>{try{const playerId=getPlayerId();const response=await axiosInstance.get(`/game/${playerId}`);return response.data;}catch(error){console.error('Error fetching game state:',error);throw error;}},updateGame:async gameState=>{try{const playerId=getPlayerId();const response=await axiosInstance.post(`/game/${playerId}/update`,gameState);return response.data;}catch(error){console.error('Error updating game state:',error);throw error;}},startSkill:async skillId=>{try{const playerId=getPlayerId();const response=await axiosInstance.post(`/game/${playerId}/skill/${skillId}/start`);return response.data;}catch(error){console.error(`Error starting skill ${skillId}:`,error);throw error;}},stopSkill:async skillId=>{try{const playerId=getPlayerId();const response=await axiosInstance.post(`/game/${playerId}/skill/${skillId}/stop`);return response.data;}catch(error){console.error(`Error stopping skill ${skillId}:`,error);throw error;}},craftItem:async itemId=>{try{const playerId=getPlayerId();const response=await axiosInstance.post(`/game/${playerId}/craft/${itemId}`);return response.data;}catch(error){console.error(`Error crafting item ${itemId}:`,error);throw error;}},buyItem:async(itemId,quantity)=>{try{const playerId=getPlayerId();const response=await axiosInstance.post(`/game/${playerId}/buy/${itemId}`,{quantity});return response.data;}catch(error){console.error(`Error buying item ${itemId}:`,error);throw error;}},sellItem:async(itemId,quantity)=>{try{const playerId=getPlayerId();const response=await axiosInstance.post(`/game/${playerId}/sell/${itemId}`,{quantity});return response.data;}catch(error){console.error(`Error selling item ${itemId}:`,error);throw error;}},startCombat:async enemyId=>{try{const playerId=getPlayerId();const response=await axiosInstance.post(`/game/${playerId}/combat/start/${enemyId}`);return response.data;}catch(error){console.error(`Error starting combat with ${enemyId}:`,error);throw error;}},stopCombat:async()=>{try{const playerId=getPlayerId();const response=await axiosInstance.post(`/game/${playerId}/combat/stop`);return response.data;}catch(error){console.error('Error stopping combat:',error);throw error;}},equipItem:async itemId=>{try{const playerId=getPlayerId();const response=await axiosInstance.post(`/game/${playerId}/equipment/equip/${itemId}`);return response.data;}catch(error){console.error(`Error equipping item ${itemId}:`,error);throw error;}},unequipItem:async slot=>{try{const playerId=getPlayerId();const response=await axiosInstance.post(`/game/${playerId}/equipment/unequip/${slot}`);return response.data;}catch(error){console.error(`Error unequipping item from slot ${slot}:`,error);throw error;}}};export default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","DEFAULT_PLAYER_ID","getPlayerId","localStorage","getItem","axiosInstance","create","baseURL","timeout","headers","interceptors","response","use","error","console","message","data","Promise","reject","api","getGame","playerId","get","updateGame","gameState","post","startSkill","skillId","stopSkill","craftItem","itemId","buyItem","quantity","sellItem","startCombat","enemyId","stopCombat","equipItem","unequipItem","slot"],"sources":["C:/Users/Domin/Desktop/coding/WaveringTides-master/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { GameState } from '../types';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\n// Set default player ID\nconst DEFAULT_PLAYER_ID = 'player1';\n\n// Get player ID from localStorage or use default\nconst getPlayerId = () => localStorage.getItem('playerId') || DEFAULT_PLAYER_ID;\n\n// Create axios instance with default config\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  timeout: 10000, // 10 second timeout\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add response interceptor for error handling\naxiosInstance.interceptors.response.use(\n  response => response,\n  error => {\n    console.error('API Error:', error.message);\n    if (error.response) {\n      console.error('Response data:', error.response.data);\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst api = {\n  getGame: async (): Promise<GameState> => {\n    try {\n      const playerId = getPlayerId();\n      const response = await axiosInstance.get(`/game/${playerId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching game state:', error);\n      throw error;\n    }\n  },\n  \n  updateGame: async (gameState: GameState): Promise<GameState> => {\n    try {\n      const playerId = getPlayerId();\n      const response = await axiosInstance.post(`/game/${playerId}/update`, gameState);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating game state:', error);\n      throw error;\n    }\n  },\n  \n  startSkill: async (skillId: string): Promise<GameState> => {\n    try {\n      const playerId = getPlayerId();\n      const response = await axiosInstance.post(`/game/${playerId}/skill/${skillId}/start`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error starting skill ${skillId}:`, error);\n      throw error;\n    }\n  },\n  \n  stopSkill: async (skillId: string): Promise<GameState> => {\n    try {\n      const playerId = getPlayerId();\n      const response = await axiosInstance.post(`/game/${playerId}/skill/${skillId}/stop`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error stopping skill ${skillId}:`, error);\n      throw error;\n    }\n  },\n  \n  craftItem: async (itemId: string): Promise<GameState> => {\n    try {\n      const playerId = getPlayerId();\n      const response = await axiosInstance.post(`/game/${playerId}/craft/${itemId}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error crafting item ${itemId}:`, error);\n      throw error;\n    }\n  },\n  \n  buyItem: async (itemId: string, quantity: number): Promise<GameState> => {\n    try {\n      const playerId = getPlayerId();\n      const response = await axiosInstance.post(`/game/${playerId}/buy/${itemId}`, { quantity });\n      return response.data;\n    } catch (error) {\n      console.error(`Error buying item ${itemId}:`, error);\n      throw error;\n    }\n  },\n  \n  sellItem: async (itemId: string, quantity: number): Promise<GameState> => {\n    try {\n      const playerId = getPlayerId();\n      const response = await axiosInstance.post(`/game/${playerId}/sell/${itemId}`, { quantity });\n      return response.data;\n    } catch (error) {\n      console.error(`Error selling item ${itemId}:`, error);\n      throw error;\n    }\n  },\n  \n  startCombat: async (enemyId: string): Promise<GameState> => {\n    try {\n      const playerId = getPlayerId();\n      const response = await axiosInstance.post(`/game/${playerId}/combat/start/${enemyId}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error starting combat with ${enemyId}:`, error);\n      throw error;\n    }\n  },\n  \n  stopCombat: async (): Promise<GameState> => {\n    try {\n      const playerId = getPlayerId();\n      const response = await axiosInstance.post(`/game/${playerId}/combat/stop`);\n      return response.data;\n    } catch (error) {\n      console.error('Error stopping combat:', error);\n      throw error;\n    }\n  },\n  \n  equipItem: async (itemId: string): Promise<GameState> => {\n    try {\n      const playerId = getPlayerId();\n      const response = await axiosInstance.post(`/game/${playerId}/equipment/equip/${itemId}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error equipping item ${itemId}:`, error);\n      throw error;\n    }\n  },\n  \n  unequipItem: async (slot: 'weapon' | 'armor'): Promise<GameState> => {\n    try {\n      const playerId = getPlayerId();\n      const response = await axiosInstance.post(`/game/${playerId}/equipment/unequip/${slot}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error unequipping item from slot ${slot}:`, error);\n      throw error;\n    }\n  }\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}