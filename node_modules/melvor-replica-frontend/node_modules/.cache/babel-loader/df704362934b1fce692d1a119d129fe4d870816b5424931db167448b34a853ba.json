{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext(undefined);/**\n * Custom hook to access the ThemeContext\n */export const useTheme=()=>{const context=useContext(ThemeContext);if(context===undefined){throw new Error('useTheme must be used within a ThemeProvider');}return context;};/**\n * ThemeProvider component - Manages theme state and provides theme operations\n */export const ThemeProvider=_ref=>{let{children}=_ref;// Get initial theme from localStorage or use light mode as default\nconst[theme,setTheme]=useState(()=>{const savedTheme=localStorage.getItem('theme');return savedTheme==='dark'?'dark':'light';});// Apply theme class to body element when theme changes\nuseEffect(()=>{document.body.dataset.theme=theme;localStorage.setItem('theme',theme);},[theme]);// Toggle between light and dark themes\nconst toggleTheme=()=>{setTheme(prevTheme=>prevTheme==='light'?'dark':'light');};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{theme,toggleTheme},children:children});};export default ThemeProvider;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","ThemeContext","undefined","useTheme","context","Error","ThemeProvider","_ref","children","theme","setTheme","savedTheme","localStorage","getItem","document","body","dataset","setItem","toggleTheme","prevTheme","Provider","value"],"sources":["C:/Users/Domin/Desktop/coding/WaveringTides-master/frontend/src/context/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\ntype Theme = 'light' | 'dark';\n\ninterface ThemeContextProps {\n  theme: Theme;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextProps | undefined>(undefined);\n\n/**\n * Custom hook to access the ThemeContext\n */\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\n/**\n * ThemeProvider component - Manages theme state and provides theme operations\n */\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\n  // Get initial theme from localStorage or use light mode as default\n  const [theme, setTheme] = useState<Theme>(() => {\n    const savedTheme = localStorage.getItem('theme');\n    return (savedTheme === 'dark' ? 'dark' : 'light') as Theme;\n  });\n\n  // Apply theme class to body element when theme changes\n  useEffect(() => {\n    document.body.dataset.theme = theme;\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  // Toggle between light and dark themes\n  const toggleTheme = () => {\n    setTheme(prevTheme => (prevTheme === 'light' ? 'dark' : 'light'));\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeProvider; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAmB,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBASzF,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAAgCO,SAAS,CAAC,CAE5E;AACA;AACA,GACA,MAAO,MAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAGR,UAAU,CAACK,YAAY,CAAC,CACxC,GAAIG,OAAO,GAAKF,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAG,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAMD;AACA;AACA,GACA,MAAO,MAAM,CAAAE,aAA2C,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACtE;AACA,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAQ,IAAM,CAC9C,KAAM,CAAAc,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAChD,MAAQ,CAAAF,UAAU,GAAK,MAAM,CAAG,MAAM,CAAG,OAAO,CAClD,CAAC,CAAC,CAEF;AACAb,SAAS,CAAC,IAAM,CACdgB,QAAQ,CAACC,IAAI,CAACC,OAAO,CAACP,KAAK,CAAGA,KAAK,CACnCG,YAAY,CAACK,OAAO,CAAC,OAAO,CAAER,KAAK,CAAC,CACtC,CAAC,CAAE,CAACA,KAAK,CAAC,CAAC,CAEX;AACA,KAAM,CAAAS,WAAW,CAAGA,CAAA,GAAM,CACxBR,QAAQ,CAACS,SAAS,EAAKA,SAAS,GAAK,OAAO,CAAG,MAAM,CAAG,OAAQ,CAAC,CACnE,CAAC,CAED,mBACEnB,IAAA,CAACC,YAAY,CAACmB,QAAQ,EAACC,KAAK,CAAE,CAAEZ,KAAK,CAAES,WAAY,CAAE,CAAAV,QAAA,CAClDA,QAAQ,CACY,CAAC,CAE5B,CAAC,CAED,cAAe,CAAAF,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}