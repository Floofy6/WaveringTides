{"ast":null,"code":"import{useGameContext}from'../context/GameContext';import{ENEMIES}from'../constants';export const useCombat=()=>{const{gameState,updateGameState}=useGameContext();const startCombat=enemyId=>{if(!gameState)return;const enemy=ENEMIES[enemyId];if(!enemy)return;updateGameState(prevState=>{if(!prevState)return prevState;return{...prevState,player:{...prevState.player,combat:{currentEnemy:{...enemy},isFighting:true}}};});};const stopCombat=()=>{if(!gameState)return;updateGameState(prevState=>{if(!prevState)return prevState;return{...prevState,player:{...prevState.player,combat:{...prevState.player.combat,isFighting:false}}};});};return{combat:gameState===null||gameState===void 0?void 0:gameState.player.combat,startCombat,stopCombat};};","map":{"version":3,"names":["useGameContext","ENEMIES","useCombat","gameState","updateGameState","startCombat","enemyId","enemy","prevState","player","combat","currentEnemy","isFighting","stopCombat"],"sources":["C:/Users/Domin/OneDrive/Desktop/coding/WaveringTides/frontend/src/hooks/useCombat.ts"],"sourcesContent":["import { useGameContext } from '../context/GameContext';\r\nimport { ENEMIES } from '../constants';\r\nimport { GameState } from '../types';\r\n\r\nexport const useCombat = () => {\r\n  const { gameState, updateGameState } = useGameContext();\r\n  \r\n  const startCombat = (enemyId: string) => {\r\n    if (!gameState) return;\r\n    \r\n    const enemy = ENEMIES[enemyId];\r\n    if (!enemy) return;\r\n    \r\n    updateGameState((prevState: GameState | null) => {\r\n      if (!prevState) return prevState;\r\n      \r\n      return {\r\n        ...prevState,\r\n        player: {\r\n          ...prevState.player,\r\n          combat: {\r\n            currentEnemy: { ...enemy },\r\n            isFighting: true\r\n          }\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  const stopCombat = () => {\r\n    if (!gameState) return;\r\n    \r\n    updateGameState((prevState: GameState | null) => {\r\n      if (!prevState) return prevState;\r\n      \r\n      return {\r\n        ...prevState,\r\n        player: {\r\n          ...prevState.player,\r\n          combat: {\r\n            ...prevState.player.combat,\r\n            isFighting: false\r\n          }\r\n        }\r\n      };\r\n    });\r\n  };\r\n  \r\n  return {\r\n    combat: gameState?.player.combat,\r\n    startCombat,\r\n    stopCombat\r\n  };\r\n}; "],"mappings":"AAAA,OAASA,cAAc,KAAQ,wBAAwB,CACvD,OAASC,OAAO,KAAQ,cAAc,CAGtC,MAAO,MAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAAEC,SAAS,CAAEC,eAAgB,CAAC,CAAGJ,cAAc,CAAC,CAAC,CAEvD,KAAM,CAAAK,WAAW,CAAIC,OAAe,EAAK,CACvC,GAAI,CAACH,SAAS,CAAE,OAEhB,KAAM,CAAAI,KAAK,CAAGN,OAAO,CAACK,OAAO,CAAC,CAC9B,GAAI,CAACC,KAAK,CAAE,OAEZH,eAAe,CAAEI,SAA2B,EAAK,CAC/C,GAAI,CAACA,SAAS,CAAE,MAAO,CAAAA,SAAS,CAEhC,MAAO,CACL,GAAGA,SAAS,CACZC,MAAM,CAAE,CACN,GAAGD,SAAS,CAACC,MAAM,CACnBC,MAAM,CAAE,CACNC,YAAY,CAAE,CAAE,GAAGJ,KAAM,CAAC,CAC1BK,UAAU,CAAE,IACd,CACF,CACF,CAAC,CACH,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAI,CAACV,SAAS,CAAE,OAEhBC,eAAe,CAAEI,SAA2B,EAAK,CAC/C,GAAI,CAACA,SAAS,CAAE,MAAO,CAAAA,SAAS,CAEhC,MAAO,CACL,GAAGA,SAAS,CACZC,MAAM,CAAE,CACN,GAAGD,SAAS,CAACC,MAAM,CACnBC,MAAM,CAAE,CACN,GAAGF,SAAS,CAACC,MAAM,CAACC,MAAM,CAC1BE,UAAU,CAAE,KACd,CACF,CACF,CAAC,CACH,CAAC,CAAC,CACJ,CAAC,CAED,MAAO,CACLF,MAAM,CAAEP,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAEM,MAAM,CAACC,MAAM,CAChCL,WAAW,CACXQ,UACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}