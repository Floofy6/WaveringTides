{"ast":null,"code":"import React,{useState}from'react';import{useInventory}from'../../hooks/useInventory';import InventoryItem from'./InventoryItem';import QuantitySelector from'../../components/QuantitySelector';/**\n * InventoryPanel component - Displays and manages the player's inventory\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const InventoryPanel=()=>{const{inventory,sellItem,equipItem}=useInventory();const[selectedQuantity,setSelectedQuantity]=useState(1);const[filter,setFilter]=useState('all');const handleSellItem=itemId=>{sellItem(itemId,selectedQuantity);};const handleEquipItem=itemId=>{equipItem(itemId);};const filteredInventory=Object.entries(inventory).filter(_ref=>{let[_,item]=_ref;if(filter==='all')return true;return item.type===filter;});return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-panel border border-panel-border rounded-lg p-5 shadow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold text-text\",children:\"Inventory\"}),/*#__PURE__*/_jsx(InventoryFilter,{currentFilter:filter,onFilterChange:setFilter})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:/*#__PURE__*/_jsx(QuantitySelector,{value:selectedQuantity,onChange:setSelectedQuantity,max:99,label:\"Sell Quantity:\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\",children:filteredInventory.length===0?/*#__PURE__*/_jsx(EmptyInventoryMessage,{filter:filter}):filteredInventory.map(_ref2=>{let[itemId,item]=_ref2;return/*#__PURE__*/_jsx(InventoryItem,{item:item,selectedQuantity:selectedQuantity,onSell:()=>handleSellItem(itemId),onEquip:()=>handleEquipItem(itemId)},itemId);})})]});};/**\n * InventoryFilter component - Provides filtering options for inventory items\n */const InventoryFilter=_ref3=>{let{currentFilter,onFilterChange}=_ref3;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600 mr-2\",children:\"Show: \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-1\",children:[/*#__PURE__*/_jsx(\"button\",{className:`px-2 py-1 text-xs rounded transition-colors ${currentFilter==='all'?'bg-primary text-white':'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,onClick:()=>onFilterChange('all'),children:\"All\"}),/*#__PURE__*/_jsx(\"button\",{className:`px-2 py-1 text-xs rounded transition-colors ${currentFilter==='resources'?'bg-primary text-white':'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,onClick:()=>onFilterChange('resources'),children:\"Resources\"}),/*#__PURE__*/_jsx(\"button\",{className:`px-2 py-1 text-xs rounded transition-colors ${currentFilter==='equipment'?'bg-primary text-white':'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,onClick:()=>onFilterChange('equipment'),children:\"Equipment\"})]})]});};/**\n * EmptyInventoryMessage component - Displays appropriate message when inventory is empty\n */const EmptyInventoryMessage=_ref4=>{let{filter}=_ref4;const messages={all:\"Your inventory is empty.\",resources:\"You don't have any resources.\",equipment:\"You don't have any equipment.\"};return/*#__PURE__*/_jsx(\"p\",{className:\"col-span-full py-8 text-center italic text-gray-500\",children:messages[filter]});};export default InventoryPanel;","map":{"version":3,"names":["React","useState","useInventory","InventoryItem","QuantitySelector","jsx","_jsx","jsxs","_jsxs","InventoryPanel","inventory","sellItem","equipItem","selectedQuantity","setSelectedQuantity","filter","setFilter","handleSellItem","itemId","handleEquipItem","filteredInventory","Object","entries","_ref","_","item","type","className","children","InventoryFilter","currentFilter","onFilterChange","value","onChange","max","label","length","EmptyInventoryMessage","map","_ref2","onSell","onEquip","_ref3","onClick","_ref4","messages","all","resources","equipment"],"sources":["C:/Users/Domin/Desktop/coding/WaveringTides-master/frontend/src/features/inventory/InventoryPanel.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useInventory } from '../../hooks/useInventory';\nimport { Item } from '../../types';\nimport InventoryItem from './InventoryItem';\nimport QuantitySelector from '../../components/QuantitySelector';\n\n/**\n * InventoryPanel component - Displays and manages the player's inventory\n */\nconst InventoryPanel: React.FC = () => {\n  const { inventory, sellItem, equipItem } = useInventory();\n  const [selectedQuantity, setSelectedQuantity] = useState<number>(1);\n  const [filter, setFilter] = useState<'all' | 'resources' | 'equipment'>('all');\n  \n  const handleSellItem = (itemId: string) => {\n    sellItem(itemId, selectedQuantity);\n  };\n  \n  const handleEquipItem = (itemId: string) => {\n    equipItem(itemId);\n  };\n  \n  const filteredInventory = Object.entries(inventory).filter(([_, item]) => {\n    if (filter === 'all') return true;\n    return item.type === filter;\n  });\n  \n  return (\n    <div className=\"bg-panel border border-panel-border rounded-lg p-5 shadow\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h2 className=\"text-xl font-semibold text-text\">Inventory</h2>\n        <InventoryFilter \n          currentFilter={filter}\n          onFilterChange={setFilter}\n        />\n      </div>\n      \n      <div className=\"mb-4\">\n        <QuantitySelector\n          value={selectedQuantity}\n          onChange={setSelectedQuantity}\n          max={99}\n          label=\"Sell Quantity:\"\n        />\n      </div>\n      \n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\n        {filteredInventory.length === 0 ? (\n          <EmptyInventoryMessage filter={filter} />\n        ) : (\n          filteredInventory.map(([itemId, item]) => (\n            <InventoryItem\n              key={itemId}\n              item={item}\n              selectedQuantity={selectedQuantity}\n              onSell={() => handleSellItem(itemId)}\n              onEquip={() => handleEquipItem(itemId)}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\n/**\n * InventoryFilter component - Provides filtering options for inventory items\n */\ninterface InventoryFilterProps {\n  currentFilter: 'all' | 'resources' | 'equipment';\n  onFilterChange: (filter: 'all' | 'resources' | 'equipment') => void;\n}\n\nconst InventoryFilter: React.FC<InventoryFilterProps> = ({ \n  currentFilter, \n  onFilterChange \n}) => {\n  return (\n    <div className=\"flex items-center\">\n      <span className=\"text-sm text-gray-600 mr-2\">Show: </span>\n      <div className=\"flex space-x-1\">\n        <button \n          className={`px-2 py-1 text-xs rounded transition-colors ${\n            currentFilter === 'all' \n              ? 'bg-primary text-white' \n              : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n          }`}\n          onClick={() => onFilterChange('all')}\n        >\n          All\n        </button>\n        <button \n          className={`px-2 py-1 text-xs rounded transition-colors ${\n            currentFilter === 'resources' \n              ? 'bg-primary text-white' \n              : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n          }`}\n          onClick={() => onFilterChange('resources')}\n        >\n          Resources\n        </button>\n        <button \n          className={`px-2 py-1 text-xs rounded transition-colors ${\n            currentFilter === 'equipment' \n              ? 'bg-primary text-white' \n              : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n          }`}\n          onClick={() => onFilterChange('equipment')}\n        >\n          Equipment\n        </button>\n      </div>\n    </div>\n  );\n};\n\n/**\n * EmptyInventoryMessage component - Displays appropriate message when inventory is empty\n */\ninterface EmptyInventoryMessageProps {\n  filter: 'all' | 'resources' | 'equipment';\n}\n\nconst EmptyInventoryMessage: React.FC<EmptyInventoryMessageProps> = ({ filter }) => {\n  const messages = {\n    all: \"Your inventory is empty.\",\n    resources: \"You don't have any resources.\",\n    equipment: \"You don't have any equipment.\"\n  };\n  \n  return <p className=\"col-span-full py-8 text-center italic text-gray-500\">{messages[filter]}</p>;\n};\n\nexport default InventoryPanel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}