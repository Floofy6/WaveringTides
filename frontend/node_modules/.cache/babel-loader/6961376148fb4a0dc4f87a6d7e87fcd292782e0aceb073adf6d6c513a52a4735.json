{"ast":null,"code":"import{useGameContext}from'../context/GameContext';export const useSkills=()=>{const{gameState,updateGameState}=useGameContext();const startSkill=skillId=>{if(!gameState)return;updateGameState(prevState=>{if(!prevState)return prevState;const newSkills={...prevState.player.skills};newSkills[skillId]={...newSkills[skillId],isActive:true};return{...prevState,player:{...prevState.player,skills:newSkills}};});};const stopSkill=skillId=>{if(!gameState)return;updateGameState(prevState=>{if(!prevState)return prevState;const newSkills={...prevState.player.skills};newSkills[skillId]={...newSkills[skillId],isActive:false};return{...prevState,player:{...prevState.player,skills:newSkills}};});};return{skills:(gameState===null||gameState===void 0?void 0:gameState.player.skills)||{},startSkill,stopSkill};};","map":{"version":3,"names":["useGameContext","useSkills","gameState","updateGameState","startSkill","skillId","prevState","newSkills","player","skills","isActive","stopSkill"],"sources":["C:/Users/Domin/OneDrive/Desktop/coding/WaveringTides/frontend/src/hooks/useSkills.ts"],"sourcesContent":["import { useGameContext } from '../context/GameContext';\r\nimport { GameState, Skill } from '../types';\r\n\r\nexport const useSkills = () => {\r\n  const { gameState, updateGameState } = useGameContext();\r\n  \r\n  const startSkill = (skillId: string) => {\r\n    if (!gameState) return;\r\n    \r\n    updateGameState((prevState: GameState | null) => {\r\n      if (!prevState) return prevState;\r\n      \r\n      const newSkills = { ...prevState.player.skills };\r\n      newSkills[skillId] = {\r\n        ...newSkills[skillId],\r\n        isActive: true\r\n      };\r\n      \r\n      return {\r\n        ...prevState,\r\n        player: {\r\n          ...prevState.player,\r\n          skills: newSkills\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  const stopSkill = (skillId: string) => {\r\n    if (!gameState) return;\r\n    \r\n    updateGameState((prevState: GameState | null) => {\r\n      if (!prevState) return prevState;\r\n      \r\n      const newSkills = { ...prevState.player.skills };\r\n      newSkills[skillId] = {\r\n        ...newSkills[skillId],\r\n        isActive: false\r\n      };\r\n      \r\n      return {\r\n        ...prevState,\r\n        player: {\r\n          ...prevState.player,\r\n          skills: newSkills\r\n        }\r\n      };\r\n    });\r\n  };\r\n  \r\n  return {\r\n    skills: gameState?.player.skills || {},\r\n    startSkill,\r\n    stopSkill\r\n  };\r\n}; "],"mappings":"AAAA,OAASA,cAAc,KAAQ,wBAAwB,CAGvD,MAAO,MAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAAEC,SAAS,CAAEC,eAAgB,CAAC,CAAGH,cAAc,CAAC,CAAC,CAEvD,KAAM,CAAAI,UAAU,CAAIC,OAAe,EAAK,CACtC,GAAI,CAACH,SAAS,CAAE,OAEhBC,eAAe,CAAEG,SAA2B,EAAK,CAC/C,GAAI,CAACA,SAAS,CAAE,MAAO,CAAAA,SAAS,CAEhC,KAAM,CAAAC,SAAS,CAAG,CAAE,GAAGD,SAAS,CAACE,MAAM,CAACC,MAAO,CAAC,CAChDF,SAAS,CAACF,OAAO,CAAC,CAAG,CACnB,GAAGE,SAAS,CAACF,OAAO,CAAC,CACrBK,QAAQ,CAAE,IACZ,CAAC,CAED,MAAO,CACL,GAAGJ,SAAS,CACZE,MAAM,CAAE,CACN,GAAGF,SAAS,CAACE,MAAM,CACnBC,MAAM,CAAEF,SACV,CACF,CAAC,CACH,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAI,SAAS,CAAIN,OAAe,EAAK,CACrC,GAAI,CAACH,SAAS,CAAE,OAEhBC,eAAe,CAAEG,SAA2B,EAAK,CAC/C,GAAI,CAACA,SAAS,CAAE,MAAO,CAAAA,SAAS,CAEhC,KAAM,CAAAC,SAAS,CAAG,CAAE,GAAGD,SAAS,CAACE,MAAM,CAACC,MAAO,CAAC,CAChDF,SAAS,CAACF,OAAO,CAAC,CAAG,CACnB,GAAGE,SAAS,CAACF,OAAO,CAAC,CACrBK,QAAQ,CAAE,KACZ,CAAC,CAED,MAAO,CACL,GAAGJ,SAAS,CACZE,MAAM,CAAE,CACN,GAAGF,SAAS,CAACE,MAAM,CACnBC,MAAM,CAAEF,SACV,CACF,CAAC,CACH,CAAC,CAAC,CACJ,CAAC,CAED,MAAO,CACLE,MAAM,CAAE,CAAAP,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAEM,MAAM,CAACC,MAAM,GAAI,CAAC,CAAC,CACtCL,UAAU,CACVO,SACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}