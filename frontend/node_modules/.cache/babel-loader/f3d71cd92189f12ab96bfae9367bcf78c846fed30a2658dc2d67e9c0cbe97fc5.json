{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useCombat}from'../../hooks/useCombat';import CombatLog from'./CombatLog';import EnemyDisplay from'./EnemyDisplay';import PlayerCombatStats from'./PlayerCombatStats';/**\r\n * CombatPanel component - Handles combat interactions between player and enemies\r\n */import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const CombatPanel=()=>{const{enemies,currentEnemy,isFighting,playerHealth,playerMaxHealth,startCombat,attackEnemy,fleeCombat,combatLog}=useCombat();const[selectedEnemyId,setSelectedEnemyId]=useState(null);// Auto-select first enemy if none selected\nuseEffect(()=>{if(!selectedEnemyId&&enemies.length>0){setSelectedEnemyId(enemies[0].id);}},[enemies,selectedEnemyId]);const handleSelectEnemy=enemyId=>{setSelectedEnemyId(enemyId);};const handleStartCombat=()=>{if(selectedEnemyId){startCombat(selectedEnemyId);}};const handleAttack=()=>{if(isFighting&&currentEnemy){attackEnemy();}};const handleFlee=()=>{if(isFighting){fleeCombat();}};// Find the selected enemy from the list\nconst selectedEnemy=enemies.find(enemy=>enemy.id===selectedEnemyId);return/*#__PURE__*/_jsxs(\"div\",{className:\"combat-panel\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Combat\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"combat-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"enemy-selection\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Choose an Enemy\"}),/*#__PURE__*/_jsx(\"div\",{className:\"enemy-list\",children:enemies.map(enemy=>/*#__PURE__*/_jsxs(\"div\",{className:`enemy-item ${selectedEnemyId===enemy.id?'selected':''}`,onClick:()=>handleSelectEnemy(enemy.id),children:[/*#__PURE__*/_jsx(\"div\",{className:\"enemy-name\",children:enemy.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"enemy-stats\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"ATK: \",enemy.attack]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"DEF: \",enemy.defense]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"HP: \",enemy.health]})]})]},enemy.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"combat-area\",children:isFighting&&currentEnemy?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(EnemyDisplay,{enemy:currentEnemy}),/*#__PURE__*/_jsxs(\"div\",{className:\"combat-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"attack-button\",onClick:handleAttack,children:\"Attack\"}),/*#__PURE__*/_jsx(\"button\",{className:\"flee-button\",onClick:handleFlee,children:\"Flee\"})]})]}):/*#__PURE__*/_jsx(_Fragment,{children:selectedEnemy&&/*#__PURE__*/_jsxs(\"div\",{className:\"selected-enemy-preview\",children:[/*#__PURE__*/_jsx(\"h3\",{children:selectedEnemy.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"enemy-stats\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Attack: \",selectedEnemy.attack]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Defense: \",selectedEnemy.defense]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Health: \",selectedEnemy.health]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"start-combat-button\",onClick:handleStartCombat,children:\"Start Combat\"})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"combat-status\",children:[/*#__PURE__*/_jsx(PlayerCombatStats,{health:playerHealth,maxHealth:playerMaxHealth}),/*#__PURE__*/_jsx(CombatLog,{logs:combatLog})]})]})]});};export default CombatPanel;","map":{"version":3,"names":["React","useState","useEffect","useCombat","CombatLog","EnemyDisplay","PlayerCombatStats","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CombatPanel","enemies","currentEnemy","isFighting","playerHealth","playerMaxHealth","startCombat","attackEnemy","fleeCombat","combatLog","selectedEnemyId","setSelectedEnemyId","length","id","handleSelectEnemy","enemyId","handleStartCombat","handleAttack","handleFlee","selectedEnemy","find","enemy","className","children","map","onClick","name","attack","defense","health","maxHealth","logs"],"sources":["C:/Users/Domin/OneDrive/Desktop/coding/WaveringTides/frontend/src/features/combat/CombatPanel.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useCombat } from '../../hooks/useCombat';\r\nimport { Enemy } from '../../types';\r\nimport CombatLog from './CombatLog';\r\nimport EnemyDisplay from './EnemyDisplay';\r\nimport PlayerCombatStats from './PlayerCombatStats';\r\n\r\n/**\r\n * CombatPanel component - Handles combat interactions between player and enemies\r\n */\r\nconst CombatPanel: React.FC = () => {\r\n  const { \r\n    enemies, \r\n    currentEnemy, \r\n    isFighting, \r\n    playerHealth, \r\n    playerMaxHealth,\r\n    startCombat, \r\n    attackEnemy, \r\n    fleeCombat,\r\n    combatLog\r\n  } = useCombat();\r\n  \r\n  const [selectedEnemyId, setSelectedEnemyId] = useState<string | null>(null);\r\n  \r\n  // Auto-select first enemy if none selected\r\n  useEffect(() => {\r\n    if (!selectedEnemyId && enemies.length > 0) {\r\n      setSelectedEnemyId(enemies[0].id);\r\n    }\r\n  }, [enemies, selectedEnemyId]);\r\n  \r\n  const handleSelectEnemy = (enemyId: string) => {\r\n    setSelectedEnemyId(enemyId);\r\n  };\r\n  \r\n  const handleStartCombat = () => {\r\n    if (selectedEnemyId) {\r\n      startCombat(selectedEnemyId);\r\n    }\r\n  };\r\n  \r\n  const handleAttack = () => {\r\n    if (isFighting && currentEnemy) {\r\n      attackEnemy();\r\n    }\r\n  };\r\n  \r\n  const handleFlee = () => {\r\n    if (isFighting) {\r\n      fleeCombat();\r\n    }\r\n  };\r\n  \r\n  // Find the selected enemy from the list\r\n  const selectedEnemy = enemies.find(enemy => enemy.id === selectedEnemyId);\r\n  \r\n  return (\r\n    <div className=\"combat-panel\">\r\n      <h2>Combat</h2>\r\n      \r\n      <div className=\"combat-container\">\r\n        <div className=\"enemy-selection\">\r\n          <h3>Choose an Enemy</h3>\r\n          <div className=\"enemy-list\">\r\n            {enemies.map((enemy: Enemy) => (\r\n              <div \r\n                key={enemy.id}\r\n                className={`enemy-item ${selectedEnemyId === enemy.id ? 'selected' : ''}`}\r\n                onClick={() => handleSelectEnemy(enemy.id)}\r\n              >\r\n                <div className=\"enemy-name\">{enemy.name}</div>\r\n                <div className=\"enemy-stats\">\r\n                  <span>ATK: {enemy.attack}</span>\r\n                  <span>DEF: {enemy.defense}</span>\r\n                  <span>HP: {enemy.health}</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"combat-area\">\r\n          {isFighting && currentEnemy ? (\r\n            <>\r\n              <EnemyDisplay enemy={currentEnemy} />\r\n              \r\n              <div className=\"combat-actions\">\r\n                <button \r\n                  className=\"attack-button\"\r\n                  onClick={handleAttack}\r\n                >\r\n                  Attack\r\n                </button>\r\n                <button \r\n                  className=\"flee-button\"\r\n                  onClick={handleFlee}\r\n                >\r\n                  Flee\r\n                </button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              {selectedEnemy && (\r\n                <div className=\"selected-enemy-preview\">\r\n                  <h3>{selectedEnemy.name}</h3>\r\n                  <div className=\"enemy-stats\">\r\n                    <p>Attack: {selectedEnemy.attack}</p>\r\n                    <p>Defense: {selectedEnemy.defense}</p>\r\n                    <p>Health: {selectedEnemy.health}</p>\r\n                  </div>\r\n                  \r\n                  <button \r\n                    className=\"start-combat-button\"\r\n                    onClick={handleStartCombat}\r\n                  >\r\n                    Start Combat\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"combat-status\">\r\n          <PlayerCombatStats \r\n            health={playerHealth}\r\n            maxHealth={playerMaxHealth}\r\n          />\r\n          \r\n          <CombatLog logs={combatLog} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CombatPanel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}