{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// Import these functions from a shared location\nconst calculateXpForNextLevel=currentLevel=>{// OSRS formula: Each level requires points equal to Math.floor(level * 300 * 2^(level/7)) / 4\nconst MAX_LEVEL=99;if(currentLevel>=MAX_LEVEL){return Number.MAX_SAFE_INTEGER;// Effectively cap at level 99\n}return Math.floor(Math.pow(2,currentLevel/7)*currentLevel*300/4);};const totalXpForLevel=level=>{let total=0;for(let i=1;i<level;i++){total+=calculateXpForNextLevel(i);}return total;};/**\n * Format a number with commas for better readability\n */const formatNumber=num=>{return num.toLocaleString();};/**\n * SkillProgressBar component - Visual representation of skill progression\n * Optimized for desktop viewing with compact design\n */const SkillProgressBar=_ref=>{let{skill,showActionProgress=true}=_ref;// Validate inputs to prevent errors\nif(!skill){console.error('SkillProgressBar: No skill data provided');return/*#__PURE__*/_jsx(\"div\",{className:\"text-danger\",children:\"Error: Skill data missing\"});}// Check level bounds\nconst level=Math.max(1,Math.min(99,skill.level));// If we're at max level, show 100%\nif(level>=99){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-full h-2 bg-gray-200 rounded overflow-hidden\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-full bg-primary\",style:{width:'100%'}})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-right text-xs text-gray-600 mt-1\",children:\"Max Level (13,034,431 XP)\"})]});}// Get XP thresholds for current level and next level\nconst currentLevelTotalXp=totalXpForLevel(level);const nextLevelTotalXp=totalXpForLevel(level+1);// Calculate XP needed for next level from current level\nconst xpForNextLevel=nextLevelTotalXp-currentLevelTotalXp;// Current XP progress within this level\nlet currentLevelXp=0;// Make sure we have a valid totalXp value\nif(typeof skill.totalXp==='number'){// Calculate how much XP we've earned within this level\ncurrentLevelXp=skill.totalXp-currentLevelTotalXp;}else if(typeof skill.xp==='number'){// Directly use the level's xp if totalXp is not available\ncurrentLevelXp=skill.xp;}// Ensure currentLevelXp is not negative\ncurrentLevelXp=Math.max(0,currentLevelXp);// Ensure currentLevelXp doesn't exceed what's needed for next level\nconst displayXp=Math.min(xpForNextLevel,currentLevelXp);// Calculate percentage progress toward next level\nconst progressPercentage=Math.min(Math.floor(displayXp/xpForNextLevel*100),100);// Calculate action progress percentage if skill is active\nconst actionProgress=skill.isActive&&skill.actionProgress?Math.min(Math.floor(skill.actionProgress*100),100):0;return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-full h-2 bg-gray-200 rounded overflow-hidden\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-full bg-primary transition-all duration-300\",style:{width:`${progressPercentage}%`}})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-right text-xs text-gray-600 mt-1\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"group relative inline-block\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"group-hover:opacity-100 opacity-0 pointer-events-none absolute -top-8 left-1/2 transform -translate-x-1/2 bg-gray-800 text-white text-xs px-2 py-1 rounded whitespace-nowrap transition-opacity duration-150\",children:[formatNumber(Math.floor(displayXp)),\" / \",formatNumber(xpForNextLevel),\" XP\"]}),formatNumber(Math.floor(displayXp)),\" / \",formatNumber(xpForNextLevel),\" XP (\",progressPercentage,\"%)\"]})}),skill.totalXp&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-right text-xs text-gray-500 mt-0.5\",children:[\"Total XP: \",formatNumber(Math.floor(skill.totalXp))]})]}),showActionProgress&&skill.isActive&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-600 opacity-80\",children:\"Action progress:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full h-1.5 bg-gray-200 rounded overflow-hidden mt-1\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-full bg-warning animate-pulse\",style:{width:`${actionProgress}%`}})})]})]});};export default SkillProgressBar;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","calculateXpForNextLevel","currentLevel","MAX_LEVEL","Number","MAX_SAFE_INTEGER","Math","floor","pow","totalXpForLevel","level","total","i","formatNumber","num","toLocaleString","SkillProgressBar","_ref","skill","showActionProgress","console","error","className","children","max","min","style","width","currentLevelTotalXp","nextLevelTotalXp","xpForNextLevel","currentLevelXp","totalXp","xp","displayXp","progressPercentage","actionProgress","isActive"],"sources":["C:/Users/Domin/Desktop/coding/WaveringTides-master/frontend/src/features/skills/SkillProgressBar.tsx"],"sourcesContent":["import React from 'react';\nimport { Skill } from '../../types';\n\ninterface SkillProgressBarProps {\n  skill: Skill;\n  showActionProgress?: boolean;\n}\n\n// Import these functions from a shared location\nconst calculateXpForNextLevel = (currentLevel: number): number => {\n  // OSRS formula: Each level requires points equal to Math.floor(level * 300 * 2^(level/7)) / 4\n  const MAX_LEVEL = 99;\n  \n  if (currentLevel >= MAX_LEVEL) {\n    return Number.MAX_SAFE_INTEGER; // Effectively cap at level 99\n  }\n  \n  return Math.floor((Math.pow(2, (currentLevel) / 7) * currentLevel * 300) / 4);\n};\n\nconst totalXpForLevel = (level: number): number => {\n  let total = 0;\n  for (let i = 1; i < level; i++) {\n    total += calculateXpForNextLevel(i);\n  }\n  return total;\n};\n\n/**\n * Format a number with commas for better readability\n */\nconst formatNumber = (num: number): string => {\n  return num.toLocaleString();\n};\n\n/**\n * SkillProgressBar component - Visual representation of skill progression\n * Optimized for desktop viewing with compact design\n */\nconst SkillProgressBar: React.FC<SkillProgressBarProps> = ({ \n  skill,\n  showActionProgress = true\n}) => {\n  // Validate inputs to prevent errors\n  if (!skill) {\n    console.error('SkillProgressBar: No skill data provided');\n    return <div className=\"text-danger\">Error: Skill data missing</div>;\n  }\n  \n  // Check level bounds\n  const level = Math.max(1, Math.min(99, skill.level));\n  \n  // If we're at max level, show 100%\n  if (level >= 99) {\n    return (\n      <div>\n        <div className=\"w-full h-2 bg-gray-200 rounded overflow-hidden\">\n          <div className=\"h-full bg-primary\" style={{ width: '100%' }} />\n        </div>\n        <div className=\"text-right text-xs text-gray-600 mt-1\">\n          Max Level (13,034,431 XP)\n        </div>\n      </div>\n    );\n  }\n  \n  // Get XP thresholds for current level and next level\n  const currentLevelTotalXp = totalXpForLevel(level);\n  const nextLevelTotalXp = totalXpForLevel(level + 1);\n  \n  // Calculate XP needed for next level from current level\n  const xpForNextLevel = nextLevelTotalXp - currentLevelTotalXp;\n  \n  // Current XP progress within this level\n  let currentLevelXp = 0;\n  \n  // Make sure we have a valid totalXp value\n  if (typeof skill.totalXp === 'number') {\n    // Calculate how much XP we've earned within this level\n    currentLevelXp = skill.totalXp - currentLevelTotalXp;\n  } else if (typeof skill.xp === 'number') {\n    // Directly use the level's xp if totalXp is not available\n    currentLevelXp = skill.xp;\n  }\n  \n  // Ensure currentLevelXp is not negative\n  currentLevelXp = Math.max(0, currentLevelXp);\n  \n  // Ensure currentLevelXp doesn't exceed what's needed for next level\n  const displayXp = Math.min(xpForNextLevel, currentLevelXp);\n  \n  // Calculate percentage progress toward next level\n  const progressPercentage = Math.min(Math.floor((displayXp / xpForNextLevel) * 100), 100);\n  \n  // Calculate action progress percentage if skill is active\n  const actionProgress = (skill.isActive && skill.actionProgress) \n    ? Math.min(Math.floor((skill.actionProgress) * 100), 100)\n    : 0;\n  \n  return (\n    <div className=\"space-y-2\">\n      {/* XP Progress bar */}\n      <div>\n        <div className=\"w-full h-2 bg-gray-200 rounded overflow-hidden\">\n          <div \n            className=\"h-full bg-primary transition-all duration-300\"\n            style={{ width: `${progressPercentage}%` }} \n          />\n        </div>\n        <div className=\"text-right text-xs text-gray-600 mt-1\">\n          <span className=\"group relative inline-block\">\n            <span className=\"group-hover:opacity-100 opacity-0 pointer-events-none absolute -top-8 left-1/2 transform -translate-x-1/2 bg-gray-800 text-white text-xs px-2 py-1 rounded whitespace-nowrap transition-opacity duration-150\">\n              {formatNumber(Math.floor(displayXp))} / {formatNumber(xpForNextLevel)} XP\n            </span>\n            {formatNumber(Math.floor(displayXp))} / {formatNumber(xpForNextLevel)} XP ({progressPercentage}%)\n          </span>\n        </div>\n        {skill.totalXp && (\n          <div className=\"text-right text-xs text-gray-500 mt-0.5\">\n            Total XP: {formatNumber(Math.floor(skill.totalXp))}\n          </div>\n        )}\n      </div>\n      \n      {/* Action progress bar for active skills */}\n      {showActionProgress && skill.isActive && (\n        <div className=\"mt-2\">\n          <div className=\"text-xs text-gray-600 opacity-80\">Action progress:</div>\n          <div className=\"w-full h-1.5 bg-gray-200 rounded overflow-hidden mt-1\">\n            <div \n              className=\"h-full bg-warning animate-pulse\"\n              style={{ width: `${actionProgress}%` }} \n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SkillProgressBar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}