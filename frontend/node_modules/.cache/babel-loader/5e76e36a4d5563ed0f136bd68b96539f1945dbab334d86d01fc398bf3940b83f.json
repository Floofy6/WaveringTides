{"ast":null,"code":"import React from'react';import{useSkills}from'../../hooks/useSkills';import SkillProgressBar from'./SkillProgressBar';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";/**\r\n * SkillPanel component - Displays player skills and their progression\r\n */const SkillPanel=()=>{const{skills,currentSkill,selectSkill}=useSkills();return/*#__PURE__*/_jsxs(\"div\",{className:\"skill-panel\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Skills\"}),/*#__PURE__*/_jsx(\"div\",{className:\"skill-list\",children:Object.values(skills).map(skill=>/*#__PURE__*/_jsxs(\"div\",{className:`skill-item ${(currentSkill===null||currentSkill===void 0?void 0:currentSkill.id)===skill.id?'selected':''}`,onClick:()=>selectSkill(skill.id),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"skill-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:skill.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"skill-level\",children:[\"Level \",skill.level]})]}),/*#__PURE__*/_jsx(SkillProgressBar,{skill:skill}),(currentSkill===null||currentSkill===void 0?void 0:currentSkill.id)===skill.id&&/*#__PURE__*/_jsxs(\"div\",{className:\"skill-details\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"XP per action: \",skill.xpPerAction]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Status: \",skill.isActive?'Active':'Inactive']}),skill.mastery&&/*#__PURE__*/_jsxs(\"div\",{className:\"mastery-list\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Mastery Unlocks\"}),/*#__PURE__*/_jsx(\"ul\",{children:Object.entries(skill.mastery.unlocks).map(_ref=>{let[level,description]=_ref;return/*#__PURE__*/_jsxs(\"li\",{className:skill.level>=parseInt(level)?'unlocked':'locked',children:[\"Level \",level,\": \",description]},level);})})]})]})]},skill.id))})]});};export default SkillPanel;","map":{"version":3,"names":["React","useSkills","SkillProgressBar","jsx","_jsx","jsxs","_jsxs","SkillPanel","skills","currentSkill","selectSkill","className","children","Object","values","map","skill","id","onClick","name","level","xpPerAction","isActive","mastery","entries","unlocks","_ref","description","parseInt"],"sources":["C:/Users/Domin/OneDrive/Desktop/coding/WaveringTides/frontend/src/features/skills/SkillPanel.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useSkills } from '../../hooks/useSkills';\r\nimport SkillProgressBar from './SkillProgressBar';\r\nimport { Skill } from '../../types';\r\n\r\n/**\r\n * SkillPanel component - Displays player skills and their progression\r\n */\r\nconst SkillPanel: React.FC = () => {\r\n  const { skills, currentSkill, selectSkill } = useSkills();\r\n  \r\n  return (\r\n    <div className=\"skill-panel\">\r\n      <h2>Skills</h2>\r\n      \r\n      <div className=\"skill-list\">\r\n        {Object.values(skills).map((skill: Skill) => (\r\n          <div \r\n            key={skill.id} \r\n            className={`skill-item ${currentSkill?.id === skill.id ? 'selected' : ''}`}\r\n            onClick={() => selectSkill(skill.id)}\r\n          >\r\n            <div className=\"skill-header\">\r\n              <h3>{skill.name}</h3>\r\n              <span className=\"skill-level\">Level {skill.level}</span>\r\n            </div>\r\n            \r\n            <SkillProgressBar skill={skill} />\r\n            \r\n            {currentSkill?.id === skill.id && (\r\n              <div className=\"skill-details\">\r\n                <p>XP per action: {skill.xpPerAction}</p>\r\n                <p>Status: {skill.isActive ? 'Active' : 'Inactive'}</p>\r\n                \r\n                {skill.mastery && (\r\n                  <div className=\"mastery-list\">\r\n                    <h4>Mastery Unlocks</h4>\r\n                    <ul>\r\n                      {Object.entries(skill.mastery.unlocks).map(([level, description]) => (\r\n                        <li \r\n                          key={level}\r\n                          className={skill.level >= parseInt(level) ? 'unlocked' : 'locked'}\r\n                        >\r\n                          Level {level}: {description}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkillPanel; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,SAAS,KAAQ,uBAAuB,CACjD,MAAO,CAAAC,gBAAgB,KAAM,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGlD;AACA;AACA,GACA,KAAM,CAAAC,UAAoB,CAAGA,CAAA,GAAM,CACjC,KAAM,CAAEC,MAAM,CAAEC,YAAY,CAAEC,WAAY,CAAC,CAAGT,SAAS,CAAC,CAAC,CAEzD,mBACEK,KAAA,QAAKK,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BR,IAAA,OAAAQ,QAAA,CAAI,QAAM,CAAI,CAAC,cAEfR,IAAA,QAAKO,SAAS,CAAC,YAAY,CAAAC,QAAA,CACxBC,MAAM,CAACC,MAAM,CAACN,MAAM,CAAC,CAACO,GAAG,CAAEC,KAAY,eACtCV,KAAA,QAEEK,SAAS,CAAE,cAAc,CAAAF,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAEQ,EAAE,IAAKD,KAAK,CAACC,EAAE,CAAG,UAAU,CAAG,EAAE,EAAG,CAC3EC,OAAO,CAAEA,CAAA,GAAMR,WAAW,CAACM,KAAK,CAACC,EAAE,CAAE,CAAAL,QAAA,eAErCN,KAAA,QAAKK,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BR,IAAA,OAAAQ,QAAA,CAAKI,KAAK,CAACG,IAAI,CAAK,CAAC,cACrBb,KAAA,SAAMK,SAAS,CAAC,aAAa,CAAAC,QAAA,EAAC,QAAM,CAACI,KAAK,CAACI,KAAK,EAAO,CAAC,EACrD,CAAC,cAENhB,IAAA,CAACF,gBAAgB,EAACc,KAAK,CAAEA,KAAM,CAAE,CAAC,CAEjC,CAAAP,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAEQ,EAAE,IAAKD,KAAK,CAACC,EAAE,eAC5BX,KAAA,QAAKK,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BN,KAAA,MAAAM,QAAA,EAAG,iBAAe,CAACI,KAAK,CAACK,WAAW,EAAI,CAAC,cACzCf,KAAA,MAAAM,QAAA,EAAG,UAAQ,CAACI,KAAK,CAACM,QAAQ,CAAG,QAAQ,CAAG,UAAU,EAAI,CAAC,CAEtDN,KAAK,CAACO,OAAO,eACZjB,KAAA,QAAKK,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BR,IAAA,OAAAQ,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBR,IAAA,OAAAQ,QAAA,CACGC,MAAM,CAACW,OAAO,CAACR,KAAK,CAACO,OAAO,CAACE,OAAO,CAAC,CAACV,GAAG,CAACW,IAAA,MAAC,CAACN,KAAK,CAAEO,WAAW,CAAC,CAAAD,IAAA,oBAC9DpB,KAAA,OAEEK,SAAS,CAAEK,KAAK,CAACI,KAAK,EAAIQ,QAAQ,CAACR,KAAK,CAAC,CAAG,UAAU,CAAG,QAAS,CAAAR,QAAA,EACnE,QACO,CAACQ,KAAK,CAAC,IAAE,CAACO,WAAW,GAHtBP,KAIH,CAAC,EACN,CAAC,CACA,CAAC,EACF,CACN,EACE,CACN,GAhCIJ,KAAK,CAACC,EAiCR,CACN,CAAC,CACC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAV,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}