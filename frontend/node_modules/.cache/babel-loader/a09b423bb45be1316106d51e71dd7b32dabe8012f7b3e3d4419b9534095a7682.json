{"ast":null,"code":"import React from'react';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const MasteryPanel=_ref=>{let{mastery}=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"mastery-panel\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Mastery Level: \",mastery.level]}),/*#__PURE__*/_jsx(\"div\",{className:\"mastery-progress\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress\",style:{width:`${calculateMasteryProgress(mastery)}%`}})})}),Object.keys(mastery.unlocks).length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mastery-unlocks\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Unlocks:\"}),/*#__PURE__*/_jsx(\"ul\",{children:Object.entries(mastery.unlocks).map(_ref2=>{let[level,description]=_ref2;return/*#__PURE__*/_jsxs(\"li\",{className:parseInt(level)<=mastery.level?'unlocked':'locked',children:[\"Level \",level,\": \",description]},level);})})]})]});};const calculateMasteryProgress=mastery=>{const currentLevelXp=calculateMasteryXpForLevel(mastery.level);const nextLevelXp=calculateMasteryXpForLevel(mastery.level+1);const xpInCurrentLevel=mastery.xp-currentLevelXp;const xpRequiredForNextLevel=nextLevelXp-currentLevelXp;return Math.min(100,Math.floor(xpInCurrentLevel/xpRequiredForNextLevel*100));};const calculateMasteryXpForLevel=level=>{return Math.floor(150*Math.pow(level,1.8));};export default MasteryPanel;","map":{"version":3,"names":["React","jsxs","_jsxs","jsx","_jsx","MasteryPanel","_ref","mastery","className","children","level","style","width","calculateMasteryProgress","Object","keys","unlocks","length","entries","map","_ref2","description","parseInt","currentLevelXp","calculateMasteryXpForLevel","nextLevelXp","xpInCurrentLevel","xp","xpRequiredForNextLevel","Math","min","floor","pow"],"sources":["C:/Users/Domin/OneDrive/Desktop/coding/WaveringTides/frontend/src/components/MasteryPanel.tsx"],"sourcesContent":["import React from 'react';\n\ninterface Mastery {\n  level: number;\n  xp: number;\n  unlocks: { [level: string]: string };\n}\n\ninterface MasteryPanelProps {\n  mastery: Mastery;\n}\n\nconst MasteryPanel: React.FC<MasteryPanelProps> = ({ mastery }) => {\n  return (\n    <div className=\"mastery-panel\">\n      <h4>Mastery Level: {mastery.level}</h4>\n      <div className=\"mastery-progress\">\n        <div className=\"progress-bar\">\n          <div \n            className=\"progress\" \n            style={{ width: `${calculateMasteryProgress(mastery)}%` }}\n          ></div>\n        </div>\n      </div>\n      \n      {Object.keys(mastery.unlocks).length > 0 && (\n        <div className=\"mastery-unlocks\">\n          <h5>Unlocks:</h5>\n          <ul>\n            {Object.entries(mastery.unlocks).map(([level, description]) => (\n              <li key={level} className={parseInt(level) <= mastery.level ? 'unlocked' : 'locked'}>\n                Level {level}: {description}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst calculateMasteryProgress = (mastery: Mastery): number => {\n  const currentLevelXp = calculateMasteryXpForLevel(mastery.level);\n  const nextLevelXp = calculateMasteryXpForLevel(mastery.level + 1);\n  const xpInCurrentLevel = mastery.xp - currentLevelXp;\n  const xpRequiredForNextLevel = nextLevelXp - currentLevelXp;\n  \n  return Math.min(100, Math.floor((xpInCurrentLevel / xpRequiredForNextLevel) * 100));\n};\n\nconst calculateMasteryXpForLevel = (level: number): number => {\n  return Math.floor(150 * (Math.pow(level, 1.8)));\n};\n\nexport default MasteryPanel;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAY1B,KAAM,CAAAC,YAAyC,CAAGC,IAAA,EAAiB,IAAhB,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CAC5D,mBACEJ,KAAA,QAAKM,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BP,KAAA,OAAAO,QAAA,EAAI,iBAAe,CAACF,OAAO,CAACG,KAAK,EAAK,CAAC,cACvCN,IAAA,QAAKI,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/BL,IAAA,QAAKI,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3BL,IAAA,QACEI,SAAS,CAAC,UAAU,CACpBG,KAAK,CAAE,CAAEC,KAAK,CAAE,GAAGC,wBAAwB,CAACN,OAAO,CAAC,GAAI,CAAE,CACtD,CAAC,CACJ,CAAC,CACH,CAAC,CAELO,MAAM,CAACC,IAAI,CAACR,OAAO,CAACS,OAAO,CAAC,CAACC,MAAM,CAAG,CAAC,eACtCf,KAAA,QAAKM,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BL,IAAA,OAAAK,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBL,IAAA,OAAAK,QAAA,CACGK,MAAM,CAACI,OAAO,CAACX,OAAO,CAACS,OAAO,CAAC,CAACG,GAAG,CAACC,KAAA,MAAC,CAACV,KAAK,CAAEW,WAAW,CAAC,CAAAD,KAAA,oBACxDlB,KAAA,OAAgBM,SAAS,CAAEc,QAAQ,CAACZ,KAAK,CAAC,EAAIH,OAAO,CAACG,KAAK,CAAG,UAAU,CAAG,QAAS,CAAAD,QAAA,EAAC,QAC7E,CAACC,KAAK,CAAC,IAAE,CAACW,WAAW,GADpBX,KAEL,CAAC,EACN,CAAC,CACA,CAAC,EACF,CACN,EACE,CAAC,CAEV,CAAC,CAED,KAAM,CAAAG,wBAAwB,CAAIN,OAAgB,EAAa,CAC7D,KAAM,CAAAgB,cAAc,CAAGC,0BAA0B,CAACjB,OAAO,CAACG,KAAK,CAAC,CAChE,KAAM,CAAAe,WAAW,CAAGD,0BAA0B,CAACjB,OAAO,CAACG,KAAK,CAAG,CAAC,CAAC,CACjE,KAAM,CAAAgB,gBAAgB,CAAGnB,OAAO,CAACoB,EAAE,CAAGJ,cAAc,CACpD,KAAM,CAAAK,sBAAsB,CAAGH,WAAW,CAAGF,cAAc,CAE3D,MAAO,CAAAM,IAAI,CAACC,GAAG,CAAC,GAAG,CAAED,IAAI,CAACE,KAAK,CAAEL,gBAAgB,CAAGE,sBAAsB,CAAI,GAAG,CAAC,CAAC,CACrF,CAAC,CAED,KAAM,CAAAJ,0BAA0B,CAAId,KAAa,EAAa,CAC5D,MAAO,CAAAmB,IAAI,CAACE,KAAK,CAAC,GAAG,CAAIF,IAAI,CAACG,GAAG,CAACtB,KAAK,CAAE,GAAG,CAAE,CAAC,CACjD,CAAC,CAED,cAAe,CAAAL,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}