{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Domin\\\\Desktop\\\\coding\\\\WaveringTides-master\\\\frontend\\\\src\\\\features\\\\combat\\\\CombatLog.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport './CombatLog.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n * CombatLog component - Displays a scrollable log of combat events\n */\nconst CombatLog = ({\n  logs\n}) => {\n  _s();\n  const logContainerRef = useRef(null);\n\n  // Auto-scroll to the bottom when new logs are added\n  useEffect(() => {\n    if (logContainerRef.current) {\n      logContainerRef.current.scrollTop = logContainerRef.current.scrollHeight;\n    }\n  }, [logs]);\n\n  // Helper function to determine message type for styling\n  const getMessageType = message => {\n    if (message.includes('hit') && message.includes('damage')) {\n      return message.includes('You hit') ? 'player-hit' : 'enemy-hit';\n    } else if (message.includes('missed')) {\n      return 'miss';\n    } else if (message.includes('defeated')) {\n      return 'victory';\n    } else if (message.includes('Congratulations')) {\n      return 'level-up';\n    } else if (message.includes('found') || message.includes('received')) {\n      return 'reward';\n    } else if (message.includes('fled') || message.includes('flee')) {\n      return message.includes('successfully') ? 'flee-success' : 'flee-fail';\n    } else if (message.includes('defeated')) {\n      return 'defeat';\n    }\n    return 'info';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"combat-log\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Combat Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"log-container\",\n      ref: logContainerRef,\n      children: logs.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-log\",\n        children: \"No combat activity yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `log-entry ${getMessageType(log)}`,\n        children: log\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(CombatLog, \"aw7UMEbZk2pr6kS8b1UQracVqpk=\");\n_c = CombatLog;\nexport default CombatLog;\nvar _c;\n$RefreshReg$(_c, \"CombatLog\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","CombatLog","logs","_s","logContainerRef","current","scrollTop","scrollHeight","getMessageType","message","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","length","map","log","index","_c","$RefreshReg$"],"sources":["C:/Users/Domin/Desktop/coding/WaveringTides-master/frontend/src/features/combat/CombatLog.tsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport './CombatLog.css';\n\ninterface CombatLogProps {\n  logs: string[];\n}\n\n/**\n * CombatLog component - Displays a scrollable log of combat events\n */\nconst CombatLog: React.FC<CombatLogProps> = ({ logs }) => {\n  const logContainerRef = useRef<HTMLDivElement>(null);\n  \n  // Auto-scroll to the bottom when new logs are added\n  useEffect(() => {\n    if (logContainerRef.current) {\n      logContainerRef.current.scrollTop = logContainerRef.current.scrollHeight;\n    }\n  }, [logs]);\n  \n  // Helper function to determine message type for styling\n  const getMessageType = (message: string): string => {\n    if (message.includes('hit') && message.includes('damage')) {\n      return message.includes('You hit') ? 'player-hit' : 'enemy-hit';\n    } else if (message.includes('missed')) {\n      return 'miss';\n    } else if (message.includes('defeated')) {\n      return 'victory';\n    } else if (message.includes('Congratulations')) {\n      return 'level-up';\n    } else if (message.includes('found') || message.includes('received')) {\n      return 'reward';\n    } else if (message.includes('fled') || message.includes('flee')) {\n      return message.includes('successfully') ? 'flee-success' : 'flee-fail';\n    } else if (message.includes('defeated')) {\n      return 'defeat';\n    }\n    return 'info';\n  };\n  \n  return (\n    <div className=\"combat-log\">\n      <h3>Combat Log</h3>\n      \n      <div className=\"log-container\" ref={logContainerRef}>\n        {logs.length === 0 ? (\n          <div className=\"empty-log\">No combat activity yet</div>\n        ) : (\n          logs.map((log, index) => (\n            <div key={index} className={`log-entry ${getMessageType(log)}`}>\n              {log}\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CombatLog; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMzB;AACA;AACA;AACA,MAAMC,SAAmC,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAMC,eAAe,GAAGP,MAAM,CAAiB,IAAI,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACd,IAAIM,eAAe,CAACC,OAAO,EAAE;MAC3BD,eAAe,CAACC,OAAO,CAACC,SAAS,GAAGF,eAAe,CAACC,OAAO,CAACE,YAAY;IAC1E;EACF,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;;EAEV;EACA,MAAMM,cAAc,GAAIC,OAAe,IAAa;IAClD,IAAIA,OAAO,CAACC,QAAQ,CAAC,KAAK,CAAC,IAAID,OAAO,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;MACzD,OAAOD,OAAO,CAACC,QAAQ,CAAC,SAAS,CAAC,GAAG,YAAY,GAAG,WAAW;IACjE,CAAC,MAAM,IAAID,OAAO,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;MACrC,OAAO,MAAM;IACf,CAAC,MAAM,IAAID,OAAO,CAACC,QAAQ,CAAC,UAAU,CAAC,EAAE;MACvC,OAAO,SAAS;IAClB,CAAC,MAAM,IAAID,OAAO,CAACC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;MAC9C,OAAO,UAAU;IACnB,CAAC,MAAM,IAAID,OAAO,CAACC,QAAQ,CAAC,OAAO,CAAC,IAAID,OAAO,CAACC,QAAQ,CAAC,UAAU,CAAC,EAAE;MACpE,OAAO,QAAQ;IACjB,CAAC,MAAM,IAAID,OAAO,CAACC,QAAQ,CAAC,MAAM,CAAC,IAAID,OAAO,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;MAC/D,OAAOD,OAAO,CAACC,QAAQ,CAAC,cAAc,CAAC,GAAG,cAAc,GAAG,WAAW;IACxE,CAAC,MAAM,IAAID,OAAO,CAACC,QAAQ,CAAC,UAAU,CAAC,EAAE;MACvC,OAAO,QAAQ;IACjB;IACA,OAAO,MAAM;EACf,CAAC;EAED,oBACEV,OAAA;IAAKW,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBZ,OAAA;MAAAY,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEnBhB,OAAA;MAAKW,SAAS,EAAC,eAAe;MAACM,GAAG,EAAEb,eAAgB;MAAAQ,QAAA,EACjDV,IAAI,CAACgB,MAAM,KAAK,CAAC,gBAChBlB,OAAA;QAAKW,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,GAEvDd,IAAI,CAACiB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAClBrB,OAAA;QAAiBW,SAAS,EAAE,aAAaH,cAAc,CAACY,GAAG,CAAC,EAAG;QAAAR,QAAA,EAC5DQ;MAAG,GADIC,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACb,EAAA,CA/CIF,SAAmC;AAAAqB,EAAA,GAAnCrB,SAAmC;AAiDzC,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}