{"ast":null,"code":"import{useState,useCallback,useEffect}from'react';import{useGameContext}from'../context/GameContext';import{useInventory}from'./useInventory';/**\r\n * useCombat hook - Manages combat-related state and operations\r\n */export const useCombat=()=>{const{gameState,updateGameState}=useGameContext();const{addItem}=useInventory();// Mock enemies for now - in a real app, these would come from the game state\nconst[enemies]=useState([{id:'enemy_goblin',name:'Goblin',attack:5,defense:3,health:20,maxHealth:20,lootTable:[{itemId:'item_gold_coin',quantity:5,chance:1.0},{itemId:'item_goblin_ear',quantity:1,chance:0.5}]},{id:'enemy_wolf',name:'Wolf',attack:7,defense:2,health:15,maxHealth:15,lootTable:[{itemId:'item_wolf_pelt',quantity:1,chance:0.8},{itemId:'item_wolf_fang',quantity:1,chance:0.3}]},{id:'enemy_bandit',name:'Bandit',attack:8,defense:5,health:25,maxHealth:25,lootTable:[{itemId:'item_gold_coin',quantity:10,chance:1.0},{itemId:'item_dagger',quantity:1,chance:0.2}]}]);// Local state for combat\nconst[currentEnemy,setCurrentEnemy]=useState(null);const[isFighting,setIsFighting]=useState(false);const[playerHealth,setPlayerHealth]=useState(100);const[playerMaxHealth,setPlayerMaxHealth]=useState(100);const[combatLog,setCombatLog]=useState([]);// Reset player health when not in combat\nuseEffect(()=>{if(!isFighting){setPlayerHealth(playerMaxHealth);}},[isFighting,playerMaxHealth]);/**\r\n   * Add a message to the combat log\r\n   */const addLogMessage=useCallback(message=>{setCombatLog(prevLog=>[...prevLog,message]);},[]);/**\r\n   * Start combat with an enemy\r\n   */const startCombat=useCallback(enemyId=>{const enemy=enemies.find(e=>e.id===enemyId);if(!enemy)return;// Clone the enemy to avoid modifying the original\nconst enemyClone={...enemy,health:enemy.maxHealth// Reset health\n};setCurrentEnemy(enemyClone);setIsFighting(true);setCombatLog([`Combat started with ${enemyClone.name}!`]);},[enemies]);/**\r\n   * Attack the current enemy\r\n   */const attackEnemy=useCallback(()=>{if(!currentEnemy||!isFighting)return;// Calculate player damage (simplified formula)\nconst playerAttack=10;// This would come from player stats + equipment\nconst damageToEnemy=Math.max(1,playerAttack-currentEnemy.defense);// Update enemy health\nconst updatedEnemy={...currentEnemy,health:Math.max(0,currentEnemy.health-damageToEnemy)};addLogMessage(`You hit ${currentEnemy.name} for ${damageToEnemy} damage!`);setCurrentEnemy(updatedEnemy);// Check if enemy is defeated\nif(updatedEnemy.health<=0){handleEnemyDefeated(updatedEnemy);return;}// Enemy counterattack\nconst enemyDamage=Math.max(1,currentEnemy.attack-5);// 5 is player defense\nsetPlayerHealth(prev=>Math.max(0,prev-enemyDamage));addLogMessage(`${currentEnemy.name} hits you for ${enemyDamage} damage!`);// Check if player is defeated\nif(playerHealth-enemyDamage<=0){handlePlayerDefeated();}},[currentEnemy,isFighting,playerHealth,addLogMessage]);/**\r\n   * Handle enemy defeat and loot\r\n   */const handleEnemyDefeated=useCallback(enemy=>{addLogMessage(`You defeated ${enemy.name}!`);// Process loot drops\nenemy.lootTable.forEach(loot=>{if(Math.random()<=loot.chance){addLogMessage(`You found ${loot.quantity} ${loot.itemId}!`);// In a real app, you would look up the item details\naddItem({id:loot.itemId,name:loot.itemId.replace('item_','').replace('_',' '),quantity:loot.quantity,type:'resource',sellPrice:5// Mock value\n});}});// End combat\nsetIsFighting(false);setCurrentEnemy(null);},[addLogMessage,addItem]);/**\r\n   * Handle player defeat\r\n   */const handlePlayerDefeated=useCallback(()=>{addLogMessage('You have been defeated!');setIsFighting(false);setCurrentEnemy(null);},[addLogMessage]);/**\r\n   * Flee from combat\r\n   */const fleeCombat=useCallback(()=>{if(!isFighting)return;// 70% chance to successfully flee\nif(Math.random()<=0.7){addLogMessage('You successfully fled from combat!');setIsFighting(false);setCurrentEnemy(null);}else{addLogMessage('You failed to flee!');// Enemy gets a free attack\nif(currentEnemy){const enemyDamage=Math.max(1,currentEnemy.attack-5);setPlayerHealth(prev=>Math.max(0,prev-enemyDamage));addLogMessage(`${currentEnemy.name} hits you for ${enemyDamage} damage!`);// Check if player is defeated\nif(playerHealth-enemyDamage<=0){handlePlayerDefeated();}}}},[isFighting,currentEnemy,playerHealth,addLogMessage,handlePlayerDefeated]);return{enemies,currentEnemy,isFighting,playerHealth,playerMaxHealth,combatLog,startCombat,attackEnemy,fleeCombat};};","map":{"version":3,"names":["useState","useCallback","useEffect","useGameContext","useInventory","useCombat","gameState","updateGameState","addItem","enemies","id","name","attack","defense","health","maxHealth","lootTable","itemId","quantity","chance","currentEnemy","setCurrentEnemy","isFighting","setIsFighting","playerHealth","setPlayerHealth","playerMaxHealth","setPlayerMaxHealth","combatLog","setCombatLog","addLogMessage","message","prevLog","startCombat","enemyId","enemy","find","e","enemyClone","attackEnemy","playerAttack","damageToEnemy","Math","max","updatedEnemy","handleEnemyDefeated","enemyDamage","prev","handlePlayerDefeated","forEach","loot","random","replace","type","sellPrice","fleeCombat"],"sources":["C:/Users/Domin/OneDrive/Desktop/coding/WaveringTides/frontend/src/hooks/useCombat.ts"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\r\nimport { useGameContext } from '../context/GameContext';\r\nimport { useInventory } from './useInventory';\r\nimport { Enemy } from '../types';\r\n\r\n/**\r\n * useCombat hook - Manages combat-related state and operations\r\n */\r\nexport const useCombat = () => {\r\n  const { gameState, updateGameState } = useGameContext();\r\n  const { addItem } = useInventory();\r\n  \r\n  // Mock enemies for now - in a real app, these would come from the game state\r\n  const [enemies] = useState<Enemy[]>([\r\n    {\r\n      id: 'enemy_goblin',\r\n      name: 'Goblin',\r\n      attack: 5,\r\n      defense: 3,\r\n      health: 20,\r\n      maxHealth: 20,\r\n      lootTable: [\r\n        { itemId: 'item_gold_coin', quantity: 5, chance: 1.0 },\r\n        { itemId: 'item_goblin_ear', quantity: 1, chance: 0.5 }\r\n      ]\r\n    },\r\n    {\r\n      id: 'enemy_wolf',\r\n      name: 'Wolf',\r\n      attack: 7,\r\n      defense: 2,\r\n      health: 15,\r\n      maxHealth: 15,\r\n      lootTable: [\r\n        { itemId: 'item_wolf_pelt', quantity: 1, chance: 0.8 },\r\n        { itemId: 'item_wolf_fang', quantity: 1, chance: 0.3 }\r\n      ]\r\n    },\r\n    {\r\n      id: 'enemy_bandit',\r\n      name: 'Bandit',\r\n      attack: 8,\r\n      defense: 5,\r\n      health: 25,\r\n      maxHealth: 25,\r\n      lootTable: [\r\n        { itemId: 'item_gold_coin', quantity: 10, chance: 1.0 },\r\n        { itemId: 'item_dagger', quantity: 1, chance: 0.2 }\r\n      ]\r\n    }\r\n  ]);\r\n  \r\n  // Local state for combat\r\n  const [currentEnemy, setCurrentEnemy] = useState<Enemy | null>(null);\r\n  const [isFighting, setIsFighting] = useState(false);\r\n  const [playerHealth, setPlayerHealth] = useState(100);\r\n  const [playerMaxHealth, setPlayerMaxHealth] = useState(100);\r\n  const [combatLog, setCombatLog] = useState<string[]>([]);\r\n  \r\n  // Reset player health when not in combat\r\n  useEffect(() => {\r\n    if (!isFighting) {\r\n      setPlayerHealth(playerMaxHealth);\r\n    }\r\n  }, [isFighting, playerMaxHealth]);\r\n  \r\n  /**\r\n   * Add a message to the combat log\r\n   */\r\n  const addLogMessage = useCallback((message: string) => {\r\n    setCombatLog(prevLog => [...prevLog, message]);\r\n  }, []);\r\n  \r\n  /**\r\n   * Start combat with an enemy\r\n   */\r\n  const startCombat = useCallback((enemyId: string) => {\r\n    const enemy = enemies.find(e => e.id === enemyId);\r\n    if (!enemy) return;\r\n    \r\n    // Clone the enemy to avoid modifying the original\r\n    const enemyClone: Enemy = {\r\n      ...enemy,\r\n      health: enemy.maxHealth // Reset health\r\n    };\r\n    \r\n    setCurrentEnemy(enemyClone);\r\n    setIsFighting(true);\r\n    setCombatLog([`Combat started with ${enemyClone.name}!`]);\r\n  }, [enemies]);\r\n  \r\n  /**\r\n   * Attack the current enemy\r\n   */\r\n  const attackEnemy = useCallback(() => {\r\n    if (!currentEnemy || !isFighting) return;\r\n    \r\n    // Calculate player damage (simplified formula)\r\n    const playerAttack = 10; // This would come from player stats + equipment\r\n    const damageToEnemy = Math.max(1, playerAttack - currentEnemy.defense);\r\n    \r\n    // Update enemy health\r\n    const updatedEnemy = {\r\n      ...currentEnemy,\r\n      health: Math.max(0, currentEnemy.health - damageToEnemy)\r\n    };\r\n    \r\n    addLogMessage(`You hit ${currentEnemy.name} for ${damageToEnemy} damage!`);\r\n    setCurrentEnemy(updatedEnemy);\r\n    \r\n    // Check if enemy is defeated\r\n    if (updatedEnemy.health <= 0) {\r\n      handleEnemyDefeated(updatedEnemy);\r\n      return;\r\n    }\r\n    \r\n    // Enemy counterattack\r\n    const enemyDamage = Math.max(1, currentEnemy.attack - 5); // 5 is player defense\r\n    setPlayerHealth(prev => Math.max(0, prev - enemyDamage));\r\n    addLogMessage(`${currentEnemy.name} hits you for ${enemyDamage} damage!`);\r\n    \r\n    // Check if player is defeated\r\n    if (playerHealth - enemyDamage <= 0) {\r\n      handlePlayerDefeated();\r\n    }\r\n  }, [currentEnemy, isFighting, playerHealth, addLogMessage]);\r\n  \r\n  /**\r\n   * Handle enemy defeat and loot\r\n   */\r\n  const handleEnemyDefeated = useCallback((enemy: Enemy) => {\r\n    addLogMessage(`You defeated ${enemy.name}!`);\r\n    \r\n    // Process loot drops\r\n    enemy.lootTable.forEach(loot => {\r\n      if (Math.random() <= loot.chance) {\r\n        addLogMessage(`You found ${loot.quantity} ${loot.itemId}!`);\r\n        // In a real app, you would look up the item details\r\n        addItem({\r\n          id: loot.itemId,\r\n          name: loot.itemId.replace('item_', '').replace('_', ' '),\r\n          quantity: loot.quantity,\r\n          type: 'resource',\r\n          sellPrice: 5 // Mock value\r\n        });\r\n      }\r\n    });\r\n    \r\n    // End combat\r\n    setIsFighting(false);\r\n    setCurrentEnemy(null);\r\n  }, [addLogMessage, addItem]);\r\n  \r\n  /**\r\n   * Handle player defeat\r\n   */\r\n  const handlePlayerDefeated = useCallback(() => {\r\n    addLogMessage('You have been defeated!');\r\n    setIsFighting(false);\r\n    setCurrentEnemy(null);\r\n  }, [addLogMessage]);\r\n  \r\n  /**\r\n   * Flee from combat\r\n   */\r\n  const fleeCombat = useCallback(() => {\r\n    if (!isFighting) return;\r\n    \r\n    // 70% chance to successfully flee\r\n    if (Math.random() <= 0.7) {\r\n      addLogMessage('You successfully fled from combat!');\r\n      setIsFighting(false);\r\n      setCurrentEnemy(null);\r\n    } else {\r\n      addLogMessage('You failed to flee!');\r\n      \r\n      // Enemy gets a free attack\r\n      if (currentEnemy) {\r\n        const enemyDamage = Math.max(1, currentEnemy.attack - 5);\r\n        setPlayerHealth(prev => Math.max(0, prev - enemyDamage));\r\n        addLogMessage(`${currentEnemy.name} hits you for ${enemyDamage} damage!`);\r\n        \r\n        // Check if player is defeated\r\n        if (playerHealth - enemyDamage <= 0) {\r\n          handlePlayerDefeated();\r\n        }\r\n      }\r\n    }\r\n  }, [isFighting, currentEnemy, playerHealth, addLogMessage, handlePlayerDefeated]);\r\n  \r\n  return {\r\n    enemies,\r\n    currentEnemy,\r\n    isFighting,\r\n    playerHealth,\r\n    playerMaxHealth,\r\n    combatLog,\r\n    startCombat,\r\n    attackEnemy,\r\n    fleeCombat\r\n  };\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}