{"ast":null,"code":"import React from'react';import{useGameContext}from'../context/GameContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";/**\r\n * MainLayout component - Serves as the main container for the game interface\r\n * Handles loading states and provides a consistent layout structure\r\n */const MainLayout=_ref=>{let{children}=_ref;const{loading}=useGameContext();return/*#__PURE__*/_jsxs(\"div\",{className:\"main-layout\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"game-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Wavering Tides\"}),/*#__PURE__*/_jsx(PlayerStatusBar,{})]}),/*#__PURE__*/_jsx(\"main\",{className:\"game-main\",children:loading?/*#__PURE__*/_jsxs(\"div\",{className:\"loading-overlay\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading your adventure...\"})]}):children}),/*#__PURE__*/_jsx(\"footer\",{className:\"game-footer\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\xA9 2023 Wavering Tides - An Idle Adventure\"})})]});};/**\r\n * PlayerStatusBar component - Shows player's gold and other key stats\r\n * Extracted as a separate component for better modularity\r\n */const PlayerStatusBar=()=>{const{gameState}=useGameContext();if(!gameState)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"player-status-bar\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-label\",children:\"Gold:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"status-value\",children:gameState.player.gold})]})});};export default MainLayout;","map":{"version":3,"names":["React","useGameContext","jsx","_jsx","jsxs","_jsxs","MainLayout","_ref","children","loading","className","PlayerStatusBar","gameState","player","gold"],"sources":["C:/Users/Domin/OneDrive/Desktop/coding/WaveringTides/frontend/src/layouts/MainLayout.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\r\nimport { useGameContext } from '../context/GameContext';\r\n\r\ninterface MainLayoutProps {\r\n  children: ReactNode;\r\n}\r\n\r\n/**\r\n * MainLayout component - Serves as the main container for the game interface\r\n * Handles loading states and provides a consistent layout structure\r\n */\r\nconst MainLayout: React.FC<MainLayoutProps> = ({ children }) => {\r\n  const { loading } = useGameContext();\r\n\r\n  return (\r\n    <div className=\"main-layout\">\r\n      <header className=\"game-header\">\r\n        <h1>Wavering Tides</h1>\r\n        <PlayerStatusBar />\r\n      </header>\r\n      \r\n      <main className=\"game-main\">\r\n        {loading ? (\r\n          <div className=\"loading-overlay\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <p>Loading your adventure...</p>\r\n          </div>\r\n        ) : (\r\n          children\r\n        )}\r\n      </main>\r\n      \r\n      <footer className=\"game-footer\">\r\n        <p>Â© 2023 Wavering Tides - An Idle Adventure</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * PlayerStatusBar component - Shows player's gold and other key stats\r\n * Extracted as a separate component for better modularity\r\n */\r\nconst PlayerStatusBar: React.FC = () => {\r\n  const { gameState } = useGameContext();\r\n  \r\n  if (!gameState) return null;\r\n  \r\n  return (\r\n    <div className=\"player-status-bar\">\r\n      <div className=\"status-item\">\r\n        <span className=\"status-label\">Gold:</span>\r\n        <span className=\"status-value\">{gameState.player.gold}</span>\r\n      </div>\r\n      {/* Can be extended with more status indicators as needed */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAqB,OAAO,CACxC,OAASC,cAAc,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAMxD;AACA;AACA;AACA,GACA,KAAM,CAAAC,UAAqC,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACzD,KAAM,CAAEE,OAAQ,CAAC,CAAGR,cAAc,CAAC,CAAC,CAEpC,mBACEI,KAAA,QAAKK,SAAS,CAAC,aAAa,CAAAF,QAAA,eAC1BH,KAAA,WAAQK,SAAS,CAAC,aAAa,CAAAF,QAAA,eAC7BL,IAAA,OAAAK,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBL,IAAA,CAACQ,eAAe,GAAE,CAAC,EACb,CAAC,cAETR,IAAA,SAAMO,SAAS,CAAC,WAAW,CAAAF,QAAA,CACxBC,OAAO,cACNJ,KAAA,QAAKK,SAAS,CAAC,iBAAiB,CAAAF,QAAA,eAC9BL,IAAA,QAAKO,SAAS,CAAC,iBAAiB,CAAM,CAAC,cACvCP,IAAA,MAAAK,QAAA,CAAG,2BAAyB,CAAG,CAAC,EAC7B,CAAC,CAENA,QACD,CACG,CAAC,cAEPL,IAAA,WAAQO,SAAS,CAAC,aAAa,CAAAF,QAAA,cAC7BL,IAAA,MAAAK,QAAA,CAAG,8CAAyC,CAAG,CAAC,CAC1C,CAAC,EACN,CAAC,CAEV,CAAC,CAED;AACA;AACA;AACA,GACA,KAAM,CAAAG,eAAyB,CAAGA,CAAA,GAAM,CACtC,KAAM,CAAEC,SAAU,CAAC,CAAGX,cAAc,CAAC,CAAC,CAEtC,GAAI,CAACW,SAAS,CAAE,MAAO,KAAI,CAE3B,mBACET,IAAA,QAAKO,SAAS,CAAC,mBAAmB,CAAAF,QAAA,cAChCH,KAAA,QAAKK,SAAS,CAAC,aAAa,CAAAF,QAAA,eAC1BL,IAAA,SAAMO,SAAS,CAAC,cAAc,CAAAF,QAAA,CAAC,OAAK,CAAM,CAAC,cAC3CL,IAAA,SAAMO,SAAS,CAAC,cAAc,CAAAF,QAAA,CAAEI,SAAS,CAACC,MAAM,CAACC,IAAI,CAAO,CAAC,EAC1D,CAAC,CAEH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAR,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}