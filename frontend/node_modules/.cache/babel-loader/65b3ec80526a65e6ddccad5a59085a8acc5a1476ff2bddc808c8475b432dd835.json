{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Domin\\\\OneDrive\\\\Desktop\\\\coding\\\\WaveringTides\\\\frontend\\\\src\\\\features\\\\skills\\\\SkillPanel.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSkills } from '../../hooks/useSkills';\nimport SkillProgressBar from './SkillProgressBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n * SkillPanel component - Displays player skills and their progression\n */\nconst SkillPanel = () => {\n  _s();\n  const {\n    skills,\n    currentSkill,\n    selectSkill,\n    startSkill,\n    stopSkill\n  } = useSkills();\n\n  /**\n   * Handler to toggle skill activity state\n   */\n  const handleToggleSkill = (skill, e) => {\n    e.stopPropagation(); // Prevent triggering the skill selection\n    if (skill.isActive) {\n      stopSkill(skill.id);\n    } else {\n      startSkill(skill.id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"skills-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Skills\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skill-list\",\n      children: Object.values(skills).map(skill => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `skill-item ${(currentSkill === null || currentSkill === void 0 ? void 0 : currentSkill.id) === skill.id ? 'selected' : ''}`,\n        onClick: () => selectSkill(skill.id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"skill-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"skill-name\",\n            children: skill.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"skill-level\",\n            children: [\"Level \", skill.level]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SkillProgressBar, {\n          skill: skill\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"skill-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `skill-action-btn ${skill.isActive ? 'stop-btn' : 'start-btn'}`,\n            onClick: e => handleToggleSkill(skill, e),\n            children: skill.isActive ? 'Stop' : 'Start'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), (currentSkill === null || currentSkill === void 0 ? void 0 : currentSkill.id) === skill.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"skill-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"XP per action: \", skill.xpPerAction]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", skill.isActive ? 'Active' : 'Inactive']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), skill.mastery && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mastery-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Mastery Unlocks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: Object.entries(skill.mastery.unlocks).map(([level, description]) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: skill.level >= parseInt(level) ? 'unlocked' : 'locked',\n                children: [\"Level \", level, \": \", description]\n              }, level, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)]\n      }, skill.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(SkillPanel, \"eLeFCIsgRGHXS4V2prtGJE8BcTw=\", false, function () {\n  return [useSkills];\n});\n_c = SkillPanel;\nexport default SkillPanel;\nvar _c;\n$RefreshReg$(_c, \"SkillPanel\");","map":{"version":3,"names":["React","useSkills","SkillProgressBar","jsxDEV","_jsxDEV","SkillPanel","_s","skills","currentSkill","selectSkill","startSkill","stopSkill","handleToggleSkill","skill","e","stopPropagation","isActive","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","values","map","onClick","name","level","xpPerAction","mastery","entries","unlocks","description","parseInt","_c","$RefreshReg$"],"sources":["C:/Users/Domin/OneDrive/Desktop/coding/WaveringTides/frontend/src/features/skills/SkillPanel.tsx"],"sourcesContent":["import React from 'react';\nimport { useSkills } from '../../hooks/useSkills';\nimport SkillProgressBar from './SkillProgressBar';\nimport { Skill } from '../../types';\n\n/**\n * SkillPanel component - Displays player skills and their progression\n */\nconst SkillPanel: React.FC = () => {\n  const { skills, currentSkill, selectSkill, startSkill, stopSkill } = useSkills();\n  \n  /**\n   * Handler to toggle skill activity state\n   */\n  const handleToggleSkill = (skill: Skill, e: React.MouseEvent) => {\n    e.stopPropagation(); // Prevent triggering the skill selection\n    if (skill.isActive) {\n      stopSkill(skill.id);\n    } else {\n      startSkill(skill.id);\n    }\n  };\n  \n  return (\n    <div className=\"skills-panel\">\n      <h2>Skills</h2>\n      \n      <div className=\"skill-list\">\n        {Object.values(skills).map((skill: Skill) => (\n          <div \n            key={skill.id} \n            className={`skill-item ${currentSkill?.id === skill.id ? 'selected' : ''}`}\n            onClick={() => selectSkill(skill.id)}\n          >\n            <div className=\"skill-header\">\n              <div className=\"skill-name\">{skill.name}</div>\n              <span className=\"skill-level\">Level {skill.level}</span>\n            </div>\n            \n            <SkillProgressBar skill={skill} />\n            \n            <div className=\"skill-actions\">\n              <button\n                className={`skill-action-btn ${skill.isActive ? 'stop-btn' : 'start-btn'}`}\n                onClick={(e) => handleToggleSkill(skill, e)}\n              >\n                {skill.isActive ? 'Stop' : 'Start'}\n              </button>\n            </div>\n            \n            {currentSkill?.id === skill.id && (\n              <div className=\"skill-details\">\n                <p>XP per action: {skill.xpPerAction}</p>\n                <p>Status: {skill.isActive ? 'Active' : 'Inactive'}</p>\n                \n                {skill.mastery && (\n                  <div className=\"mastery-list\">\n                    <h4>Mastery Unlocks</h4>\n                    <ul>\n                      {Object.entries(skill.mastery.unlocks).map(([level, description]) => (\n                        <li \n                          key={level}\n                          className={skill.level >= parseInt(level) ? 'unlocked' : 'locked'}\n                        >\n                          Level {level}: {description}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SkillPanel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}