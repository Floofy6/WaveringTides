{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Domin\\\\OneDrive\\\\Desktop\\\\coding\\\\WaveringTides\\\\frontend\\\\src\\\\features\\\\equipment\\\\CombatStats.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\r\n * CombatStats component - Calculates and displays combat statistics based on equipped items\r\n */\nconst CombatStats = ({\n  equipment\n}) => {\n  /**\r\n   * Calculate the total value for a specific stat from all equipped items\r\n   */\n  const calculateTotalStat = statName => {\n    var _equipment$weapon, _equipment$weapon$sta, _equipment$armor, _equipment$armor$stat;\n    let total = 0;\n    if ((_equipment$weapon = equipment.weapon) !== null && _equipment$weapon !== void 0 && (_equipment$weapon$sta = _equipment$weapon.stats) !== null && _equipment$weapon$sta !== void 0 && _equipment$weapon$sta[statName]) {\n      total += equipment.weapon.stats[statName] || 0;\n    }\n    if ((_equipment$armor = equipment.armor) !== null && _equipment$armor !== void 0 && (_equipment$armor$stat = _equipment$armor.stats) !== null && _equipment$armor$stat !== void 0 && _equipment$armor$stat[statName]) {\n      total += equipment.armor.stats[statName] || 0;\n    }\n    return total;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"equipment-stats\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Combat Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Attack: \", calculateTotalStat('attackBonus')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Strength: \", calculateTotalStat('strengthBonus')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Defense: \", calculateTotalStat('defenseBonus')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = CombatStats;\nexport default CombatStats;\nvar _c;\n$RefreshReg$(_c, \"CombatStats\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CombatStats","equipment","calculateTotalStat","statName","_equipment$weapon","_equipment$weapon$sta","_equipment$armor","_equipment$armor$stat","total","weapon","stats","armor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Domin/OneDrive/Desktop/coding/WaveringTides/frontend/src/features/equipment/CombatStats.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Item } from '../../types';\r\n\r\ninterface CombatStatsProps {\r\n  equipment: {\r\n    weapon?: Item;\r\n    armor?: Item;\r\n  };\r\n}\r\n\r\n/**\r\n * CombatStats component - Calculates and displays combat statistics based on equipped items\r\n */\r\nconst CombatStats: React.FC<CombatStatsProps> = ({ equipment }) => {\r\n  /**\r\n   * Calculate the total value for a specific stat from all equipped items\r\n   */\r\n  const calculateTotalStat = (statName: 'attackBonus' | 'strengthBonus' | 'defenseBonus'): number => {\r\n    let total = 0;\r\n    \r\n    if (equipment.weapon?.stats?.[statName]) {\r\n      total += equipment.weapon.stats[statName] || 0;\r\n    }\r\n    \r\n    if (equipment.armor?.stats?.[statName]) {\r\n      total += equipment.armor.stats[statName] || 0;\r\n    }\r\n    \r\n    return total;\r\n  };\r\n\r\n  return (\r\n    <div className=\"equipment-stats\">\r\n      <h3>Combat Stats</h3>\r\n      <p>Attack: {calculateTotalStat('attackBonus')}</p>\r\n      <p>Strength: {calculateTotalStat('strengthBonus')}</p>\r\n      <p>Defense: {calculateTotalStat('defenseBonus')}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CombatStats; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU1B;AACA;AACA;AACA,MAAMC,WAAuC,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EACjE;AACF;AACA;EACE,MAAMC,kBAAkB,GAAIC,QAA0D,IAAa;IAAA,IAAAC,iBAAA,EAAAC,qBAAA,EAAAC,gBAAA,EAAAC,qBAAA;IACjG,IAAIC,KAAK,GAAG,CAAC;IAEb,KAAAJ,iBAAA,GAAIH,SAAS,CAACQ,MAAM,cAAAL,iBAAA,gBAAAC,qBAAA,GAAhBD,iBAAA,CAAkBM,KAAK,cAAAL,qBAAA,eAAvBA,qBAAA,CAA0BF,QAAQ,CAAC,EAAE;MACvCK,KAAK,IAAIP,SAAS,CAACQ,MAAM,CAACC,KAAK,CAACP,QAAQ,CAAC,IAAI,CAAC;IAChD;IAEA,KAAAG,gBAAA,GAAIL,SAAS,CAACU,KAAK,cAAAL,gBAAA,gBAAAC,qBAAA,GAAfD,gBAAA,CAAiBI,KAAK,cAAAH,qBAAA,eAAtBA,qBAAA,CAAyBJ,QAAQ,CAAC,EAAE;MACtCK,KAAK,IAAIP,SAAS,CAACU,KAAK,CAACD,KAAK,CAACP,QAAQ,CAAC,IAAI,CAAC;IAC/C;IAEA,OAAOK,KAAK;EACd,CAAC;EAED,oBACET,OAAA;IAAKa,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9Bd,OAAA;MAAAc,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBlB,OAAA;MAAAc,QAAA,GAAG,UAAQ,EAACX,kBAAkB,CAAC,aAAa,CAAC;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClDlB,OAAA;MAAAc,QAAA,GAAG,YAAU,EAACX,kBAAkB,CAAC,eAAe,CAAC;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtDlB,OAAA;MAAAc,QAAA,GAAG,WAAS,EAACX,kBAAkB,CAAC,cAAc,CAAC;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV,CAAC;AAACC,EAAA,GA1BIlB,WAAuC;AA4B7C,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}