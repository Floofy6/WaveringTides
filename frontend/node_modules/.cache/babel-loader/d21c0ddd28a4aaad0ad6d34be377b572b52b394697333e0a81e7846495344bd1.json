{"ast":null,"code":"import React from'react';import{useSkills}from'../../hooks/useSkills';import MasteryPanel from'../../components/MasteryPanel';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SkillPanel=_ref=>{let{skillId}=_ref;const{skills,startSkill,stopSkill}=useSkills();const skill=skills[skillId];if(!skill){return/*#__PURE__*/_jsx(\"div\",{children:\"Skill not found\"});}const handleToggleSkill=()=>{if(skill.isActive){stopSkill(skillId);}else{startSkill(skillId);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"skill-panel\",children:[/*#__PURE__*/_jsx(\"h3\",{children:skill.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"skill-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Level: \",skill.level]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"XP: \",skill.xp]}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress\",style:{width:`${calculateProgressPercentage(skill)}%`}})})]}),/*#__PURE__*/_jsx(\"button\",{className:`skill-action-btn ${skill.isActive?'active':''}`,onClick:handleToggleSkill,children:skill.isActive?'Stop':'Start'}),skill.mastery&&/*#__PURE__*/_jsx(MasteryPanel,{mastery:skill.mastery})]});};const calculateProgressPercentage=skill=>{const currentLevelXp=calculateXpForLevel(skill.level);const nextLevelXp=calculateXpForLevel(skill.level+1);const xpInCurrentLevel=skill.xp-currentLevelXp;const xpRequiredForNextLevel=nextLevelXp-currentLevelXp;return Math.min(100,Math.floor(xpInCurrentLevel/xpRequiredForNextLevel*100));};const calculateXpForLevel=level=>{return Math.floor(100*Math.pow(level,1.5));};export default SkillPanel;","map":{"version":3,"names":["React","useSkills","MasteryPanel","jsx","_jsx","jsxs","_jsxs","SkillPanel","_ref","skillId","skills","startSkill","stopSkill","skill","children","handleToggleSkill","isActive","className","name","level","xp","style","width","calculateProgressPercentage","onClick","mastery","currentLevelXp","calculateXpForLevel","nextLevelXp","xpInCurrentLevel","xpRequiredForNextLevel","Math","min","floor","pow"],"sources":["C:/Users/Domin/OneDrive/Desktop/coding/WaveringTides/frontend/src/features/skills/SkillPanel.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useSkills } from '../../hooks/useSkills';\r\nimport { Skill } from '../../types';\r\nimport MasteryPanel from '../../components/MasteryPanel';\r\n\r\ninterface SkillPanelProps {\r\n  skillId: string;\r\n}\r\n\r\nconst SkillPanel: React.FC<SkillPanelProps> = ({ skillId }) => {\r\n  const { skills, startSkill, stopSkill } = useSkills();\r\n  const skill = skills[skillId];\r\n\r\n  if (!skill) {\r\n    return <div>Skill not found</div>;\r\n  }\r\n\r\n  const handleToggleSkill = () => {\r\n    if (skill.isActive) {\r\n      stopSkill(skillId);\r\n    } else {\r\n      startSkill(skillId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"skill-panel\">\r\n      <h3>{skill.name}</h3>\r\n      <div className=\"skill-info\">\r\n        <p>Level: {skill.level}</p>\r\n        <p>XP: {skill.xp}</p>\r\n        <div className=\"progress-bar\">\r\n          <div \r\n            className=\"progress\" \r\n            style={{ width: `${calculateProgressPercentage(skill)}%` }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <button \r\n        className={`skill-action-btn ${skill.isActive ? 'active' : ''}`}\r\n        onClick={handleToggleSkill}\r\n      >\r\n        {skill.isActive ? 'Stop' : 'Start'}\r\n      </button>\r\n      {skill.mastery && <MasteryPanel mastery={skill.mastery} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst calculateProgressPercentage = (skill: Skill): number => {\r\n  const currentLevelXp = calculateXpForLevel(skill.level);\r\n  const nextLevelXp = calculateXpForLevel(skill.level + 1);\r\n  const xpInCurrentLevel = skill.xp - currentLevelXp;\r\n  const xpRequiredForNextLevel = nextLevelXp - currentLevelXp;\r\n  \r\n  return Math.min(100, Math.floor((xpInCurrentLevel / xpRequiredForNextLevel) * 100));\r\n};\r\n\r\nconst calculateXpForLevel = (level: number): number => {\r\n  return Math.floor(100 * (Math.pow(level, 1.5)));\r\n};\r\n\r\nexport default SkillPanel; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,SAAS,KAAQ,uBAAuB,CAEjD,MAAO,CAAAC,YAAY,KAAM,+BAA+B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAMzD,KAAM,CAAAC,UAAqC,CAAGC,IAAA,EAAiB,IAAhB,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CACxD,KAAM,CAAEE,MAAM,CAAEC,UAAU,CAAEC,SAAU,CAAC,CAAGX,SAAS,CAAC,CAAC,CACrD,KAAM,CAAAY,KAAK,CAAGH,MAAM,CAACD,OAAO,CAAC,CAE7B,GAAI,CAACI,KAAK,CAAE,CACV,mBAAOT,IAAA,QAAAU,QAAA,CAAK,iBAAe,CAAK,CAAC,CACnC,CAEA,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,GAAIF,KAAK,CAACG,QAAQ,CAAE,CAClBJ,SAAS,CAACH,OAAO,CAAC,CACpB,CAAC,IAAM,CACLE,UAAU,CAACF,OAAO,CAAC,CACrB,CACF,CAAC,CAED,mBACEH,KAAA,QAAKW,SAAS,CAAC,aAAa,CAAAH,QAAA,eAC1BV,IAAA,OAAAU,QAAA,CAAKD,KAAK,CAACK,IAAI,CAAK,CAAC,cACrBZ,KAAA,QAAKW,SAAS,CAAC,YAAY,CAAAH,QAAA,eACzBR,KAAA,MAAAQ,QAAA,EAAG,SAAO,CAACD,KAAK,CAACM,KAAK,EAAI,CAAC,cAC3Bb,KAAA,MAAAQ,QAAA,EAAG,MAAI,CAACD,KAAK,CAACO,EAAE,EAAI,CAAC,cACrBhB,IAAA,QAAKa,SAAS,CAAC,cAAc,CAAAH,QAAA,cAC3BV,IAAA,QACEa,SAAS,CAAC,UAAU,CACpBI,KAAK,CAAE,CAAEC,KAAK,CAAE,GAAGC,2BAA2B,CAACV,KAAK,CAAC,GAAI,CAAE,CACvD,CAAC,CACJ,CAAC,EACH,CAAC,cACNT,IAAA,WACEa,SAAS,CAAE,oBAAoBJ,KAAK,CAACG,QAAQ,CAAG,QAAQ,CAAG,EAAE,EAAG,CAChEQ,OAAO,CAAET,iBAAkB,CAAAD,QAAA,CAE1BD,KAAK,CAACG,QAAQ,CAAG,MAAM,CAAG,OAAO,CAC5B,CAAC,CACRH,KAAK,CAACY,OAAO,eAAIrB,IAAA,CAACF,YAAY,EAACuB,OAAO,CAAEZ,KAAK,CAACY,OAAQ,CAAE,CAAC,EACvD,CAAC,CAEV,CAAC,CAED,KAAM,CAAAF,2BAA2B,CAAIV,KAAY,EAAa,CAC5D,KAAM,CAAAa,cAAc,CAAGC,mBAAmB,CAACd,KAAK,CAACM,KAAK,CAAC,CACvD,KAAM,CAAAS,WAAW,CAAGD,mBAAmB,CAACd,KAAK,CAACM,KAAK,CAAG,CAAC,CAAC,CACxD,KAAM,CAAAU,gBAAgB,CAAGhB,KAAK,CAACO,EAAE,CAAGM,cAAc,CAClD,KAAM,CAAAI,sBAAsB,CAAGF,WAAW,CAAGF,cAAc,CAE3D,MAAO,CAAAK,IAAI,CAACC,GAAG,CAAC,GAAG,CAAED,IAAI,CAACE,KAAK,CAAEJ,gBAAgB,CAAGC,sBAAsB,CAAI,GAAG,CAAC,CAAC,CACrF,CAAC,CAED,KAAM,CAAAH,mBAAmB,CAAIR,KAAa,EAAa,CACrD,MAAO,CAAAY,IAAI,CAACE,KAAK,CAAC,GAAG,CAAIF,IAAI,CAACG,GAAG,CAACf,KAAK,CAAE,GAAG,CAAE,CAAC,CACjD,CAAC,CAED,cAAe,CAAAZ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}