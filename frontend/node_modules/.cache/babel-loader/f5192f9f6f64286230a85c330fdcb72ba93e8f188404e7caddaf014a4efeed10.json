{"ast":null,"code":"import{useGameContext}from'../context/GameContext';export const useShop=()=>{const{gameState,updateGameState}=useGameContext();const buyItem=(item,quantity)=>{if(!gameState)return;if(!item.buyPrice)return;const totalCost=item.buyPrice*quantity;if(gameState.player.gold<totalCost)return;updateGameState(prevState=>{if(!prevState)return prevState;const newInventory={...prevState.player.inventory};// Add item to inventory\nif(newInventory[item.id]){newInventory[item.id]={...newInventory[item.id],quantity:newInventory[item.id].quantity+quantity};}else{newInventory[item.id]={...item,quantity};}// Deduct gold\nconst newGold=prevState.player.gold-totalCost;return{...prevState,player:{...prevState.player,gold:newGold,inventory:newInventory}};});};return{gold:(gameState===null||gameState===void 0?void 0:gameState.player.gold)||0,buyItem};};","map":{"version":3,"names":["useGameContext","useShop","gameState","updateGameState","buyItem","item","quantity","buyPrice","totalCost","player","gold","prevState","newInventory","inventory","id","newGold"],"sources":["C:/Users/Domin/OneDrive/Desktop/coding/WaveringTides/frontend/src/hooks/useShop.ts"],"sourcesContent":["import { useGameContext } from '../context/GameContext';\r\nimport { GameState, Item } from '../types';\r\n\r\nexport const useShop = () => {\r\n  const { gameState, updateGameState } = useGameContext();\r\n  \r\n  const buyItem = (item: Item, quantity: number) => {\r\n    if (!gameState) return;\r\n    \r\n    if (!item.buyPrice) return;\r\n    \r\n    const totalCost = item.buyPrice * quantity;\r\n    if (gameState.player.gold < totalCost) return;\r\n    \r\n    updateGameState((prevState: GameState | null) => {\r\n      if (!prevState) return prevState;\r\n      \r\n      const newInventory = { ...prevState.player.inventory };\r\n      \r\n      // Add item to inventory\r\n      if (newInventory[item.id]) {\r\n        newInventory[item.id] = {\r\n          ...newInventory[item.id],\r\n          quantity: newInventory[item.id].quantity + quantity\r\n        };\r\n      } else {\r\n        newInventory[item.id] = {\r\n          ...item,\r\n          quantity\r\n        };\r\n      }\r\n      \r\n      // Deduct gold\r\n      const newGold = prevState.player.gold - totalCost;\r\n      \r\n      return {\r\n        ...prevState,\r\n        player: {\r\n          ...prevState.player,\r\n          gold: newGold,\r\n          inventory: newInventory\r\n        }\r\n      };\r\n    });\r\n  };\r\n  \r\n  return {\r\n    gold: gameState?.player.gold || 0,\r\n    buyItem\r\n  };\r\n}; "],"mappings":"AAAA,OAASA,cAAc,KAAQ,wBAAwB,CAGvD,MAAO,MAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAEC,SAAS,CAAEC,eAAgB,CAAC,CAAGH,cAAc,CAAC,CAAC,CAEvD,KAAM,CAAAI,OAAO,CAAGA,CAACC,IAAU,CAAEC,QAAgB,GAAK,CAChD,GAAI,CAACJ,SAAS,CAAE,OAEhB,GAAI,CAACG,IAAI,CAACE,QAAQ,CAAE,OAEpB,KAAM,CAAAC,SAAS,CAAGH,IAAI,CAACE,QAAQ,CAAGD,QAAQ,CAC1C,GAAIJ,SAAS,CAACO,MAAM,CAACC,IAAI,CAAGF,SAAS,CAAE,OAEvCL,eAAe,CAAEQ,SAA2B,EAAK,CAC/C,GAAI,CAACA,SAAS,CAAE,MAAO,CAAAA,SAAS,CAEhC,KAAM,CAAAC,YAAY,CAAG,CAAE,GAAGD,SAAS,CAACF,MAAM,CAACI,SAAU,CAAC,CAEtD;AACA,GAAID,YAAY,CAACP,IAAI,CAACS,EAAE,CAAC,CAAE,CACzBF,YAAY,CAACP,IAAI,CAACS,EAAE,CAAC,CAAG,CACtB,GAAGF,YAAY,CAACP,IAAI,CAACS,EAAE,CAAC,CACxBR,QAAQ,CAAEM,YAAY,CAACP,IAAI,CAACS,EAAE,CAAC,CAACR,QAAQ,CAAGA,QAC7C,CAAC,CACH,CAAC,IAAM,CACLM,YAAY,CAACP,IAAI,CAACS,EAAE,CAAC,CAAG,CACtB,GAAGT,IAAI,CACPC,QACF,CAAC,CACH,CAEA;AACA,KAAM,CAAAS,OAAO,CAAGJ,SAAS,CAACF,MAAM,CAACC,IAAI,CAAGF,SAAS,CAEjD,MAAO,CACL,GAAGG,SAAS,CACZF,MAAM,CAAE,CACN,GAAGE,SAAS,CAACF,MAAM,CACnBC,IAAI,CAAEK,OAAO,CACbF,SAAS,CAAED,YACb,CACF,CAAC,CACH,CAAC,CAAC,CACJ,CAAC,CAED,MAAO,CACLF,IAAI,CAAE,CAAAR,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAEO,MAAM,CAACC,IAAI,GAAI,CAAC,CACjCN,OACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}