{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useGameContext } from '../context/GameContext';\nexport const useInventory = () => {\n  _s();\n  const {\n    gameState,\n    updateGameState\n  } = useGameContext();\n  const sellItem = (itemId, quantity) => {\n    if (!gameState) return;\n    const item = gameState.player.inventory[itemId];\n    if (!item || !item.sellPrice) return;\n    updateGameState(prevState => {\n      if (!prevState) return prevState;\n      const newInventory = {\n        ...prevState.player.inventory\n      };\n      const newGold = prevState.player.gold + item.sellPrice * quantity;\n      if (item.quantity <= quantity) {\n        delete newInventory[itemId];\n      } else {\n        newInventory[itemId] = {\n          ...item,\n          quantity: item.quantity - quantity\n        };\n      }\n      return {\n        ...prevState,\n        player: {\n          ...prevState.player,\n          gold: newGold,\n          inventory: newInventory\n        }\n      };\n    });\n  };\n  const equipItem = itemId => {\n    if (!gameState) return;\n    const item = gameState.player.inventory[itemId];\n    if (!item || item.type !== 'equipment' || !item.slot) return;\n    updateGameState(prevState => {\n      if (!prevState) return prevState;\n      const newInventory = {\n        ...prevState.player.inventory\n      };\n      const newEquipment = {\n        ...prevState.player.equipment\n      };\n\n      // Type guard to ensure slot is 'weapon' or 'armor'\n      if (item.slot === 'weapon' || item.slot === 'armor') {\n        // Unequip current item if any\n        const currentEquipped = newEquipment[item.slot];\n        if (currentEquipped) {\n          if (newInventory[currentEquipped.id]) {\n            newInventory[currentEquipped.id].quantity += 1;\n          } else {\n            newInventory[currentEquipped.id] = {\n              ...currentEquipped,\n              quantity: 1\n            };\n          }\n        }\n\n        // Equip new item\n        newEquipment[item.slot] = {\n          ...item,\n          quantity: 1\n        };\n      }\n\n      // Remove from inventory\n      if (item.quantity <= 1) {\n        delete newInventory[itemId];\n      } else {\n        newInventory[itemId] = {\n          ...item,\n          quantity: item.quantity - 1\n        };\n      }\n      return {\n        ...prevState,\n        player: {\n          ...prevState.player,\n          inventory: newInventory,\n          equipment: newEquipment\n        }\n      };\n    });\n  };\n  return {\n    inventory: (gameState === null || gameState === void 0 ? void 0 : gameState.player.inventory) || {},\n    sellItem,\n    equipItem\n  };\n};\n_s(useInventory, \"18xgbNVGWidCo/sWQzm7FstYldI=\", false, function () {\n  return [useGameContext];\n});","map":{"version":3,"names":["useGameContext","useInventory","_s","gameState","updateGameState","sellItem","itemId","quantity","item","player","inventory","sellPrice","prevState","newInventory","newGold","gold","equipItem","type","slot","newEquipment","equipment","currentEquipped","id"],"sources":["C:/Users/Domin/OneDrive/Desktop/coding/WaveringTides/frontend/src/hooks/useInventory.ts"],"sourcesContent":["import { useGameContext } from '../context/GameContext';\r\nimport { GameState, Item } from '../types';\r\n\r\nexport const useInventory = () => {\r\n  const { gameState, updateGameState } = useGameContext();\r\n  \r\n  const sellItem = (itemId: string, quantity: number) => {\r\n    if (!gameState) return;\r\n    \r\n    const item = gameState.player.inventory[itemId];\r\n    if (!item || !item.sellPrice) return;\r\n    \r\n    updateGameState((prevState: GameState | null) => {\r\n      if (!prevState) return prevState;\r\n      \r\n      const newInventory = { ...prevState.player.inventory };\r\n      const newGold = prevState.player.gold + (item.sellPrice * quantity);\r\n      \r\n      if (item.quantity <= quantity) {\r\n        delete newInventory[itemId];\r\n      } else {\r\n        newInventory[itemId] = {\r\n          ...item,\r\n          quantity: item.quantity - quantity\r\n        };\r\n      }\r\n      \r\n      return {\r\n        ...prevState,\r\n        player: {\r\n          ...prevState.player,\r\n          gold: newGold,\r\n          inventory: newInventory\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  const equipItem = (itemId: string) => {\r\n    if (!gameState) return;\r\n    \r\n    const item = gameState.player.inventory[itemId];\r\n    if (!item || item.type !== 'equipment' || !item.slot) return;\r\n    \r\n    updateGameState((prevState: GameState | null) => {\r\n      if (!prevState) return prevState;\r\n      \r\n      const newInventory = { ...prevState.player.inventory };\r\n      const newEquipment = { ...prevState.player.equipment };\r\n      \r\n      // Type guard to ensure slot is 'weapon' or 'armor'\r\n      if (item.slot === 'weapon' || item.slot === 'armor') {\r\n        // Unequip current item if any\r\n        const currentEquipped = newEquipment[item.slot];\r\n        if (currentEquipped) {\r\n          if (newInventory[currentEquipped.id]) {\r\n            newInventory[currentEquipped.id].quantity += 1;\r\n          } else {\r\n            newInventory[currentEquipped.id] = {\r\n              ...currentEquipped,\r\n              quantity: 1\r\n            };\r\n          }\r\n        }\r\n      \r\n        // Equip new item\r\n        newEquipment[item.slot] = { ...item, quantity: 1 };\r\n      }\r\n      \r\n      // Remove from inventory\r\n      if (item.quantity <= 1) {\r\n        delete newInventory[itemId];\r\n      } else {\r\n        newInventory[itemId] = {\r\n          ...item,\r\n          quantity: item.quantity - 1\r\n        };\r\n      }\r\n      \r\n      return {\r\n        ...prevState,\r\n        player: {\r\n          ...prevState.player,\r\n          inventory: newInventory,\r\n          equipment: newEquipment\r\n        }\r\n      };\r\n    });\r\n  };\r\n  \r\n  return {\r\n    inventory: gameState?.player.inventory || {},\r\n    sellItem,\r\n    equipItem\r\n  };\r\n}; "],"mappings":";AAAA,SAASA,cAAc,QAAQ,wBAAwB;AAGvD,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM;IAAEC,SAAS;IAAEC;EAAgB,CAAC,GAAGJ,cAAc,CAAC,CAAC;EAEvD,MAAMK,QAAQ,GAAGA,CAACC,MAAc,EAAEC,QAAgB,KAAK;IACrD,IAAI,CAACJ,SAAS,EAAE;IAEhB,MAAMK,IAAI,GAAGL,SAAS,CAACM,MAAM,CAACC,SAAS,CAACJ,MAAM,CAAC;IAC/C,IAAI,CAACE,IAAI,IAAI,CAACA,IAAI,CAACG,SAAS,EAAE;IAE9BP,eAAe,CAAEQ,SAA2B,IAAK;MAC/C,IAAI,CAACA,SAAS,EAAE,OAAOA,SAAS;MAEhC,MAAMC,YAAY,GAAG;QAAE,GAAGD,SAAS,CAACH,MAAM,CAACC;MAAU,CAAC;MACtD,MAAMI,OAAO,GAAGF,SAAS,CAACH,MAAM,CAACM,IAAI,GAAIP,IAAI,CAACG,SAAS,GAAGJ,QAAS;MAEnE,IAAIC,IAAI,CAACD,QAAQ,IAAIA,QAAQ,EAAE;QAC7B,OAAOM,YAAY,CAACP,MAAM,CAAC;MAC7B,CAAC,MAAM;QACLO,YAAY,CAACP,MAAM,CAAC,GAAG;UACrB,GAAGE,IAAI;UACPD,QAAQ,EAAEC,IAAI,CAACD,QAAQ,GAAGA;QAC5B,CAAC;MACH;MAEA,OAAO;QACL,GAAGK,SAAS;QACZH,MAAM,EAAE;UACN,GAAGG,SAAS,CAACH,MAAM;UACnBM,IAAI,EAAED,OAAO;UACbJ,SAAS,EAAEG;QACb;MACF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,SAAS,GAAIV,MAAc,IAAK;IACpC,IAAI,CAACH,SAAS,EAAE;IAEhB,MAAMK,IAAI,GAAGL,SAAS,CAACM,MAAM,CAACC,SAAS,CAACJ,MAAM,CAAC;IAC/C,IAAI,CAACE,IAAI,IAAIA,IAAI,CAACS,IAAI,KAAK,WAAW,IAAI,CAACT,IAAI,CAACU,IAAI,EAAE;IAEtDd,eAAe,CAAEQ,SAA2B,IAAK;MAC/C,IAAI,CAACA,SAAS,EAAE,OAAOA,SAAS;MAEhC,MAAMC,YAAY,GAAG;QAAE,GAAGD,SAAS,CAACH,MAAM,CAACC;MAAU,CAAC;MACtD,MAAMS,YAAY,GAAG;QAAE,GAAGP,SAAS,CAACH,MAAM,CAACW;MAAU,CAAC;;MAEtD;MACA,IAAIZ,IAAI,CAACU,IAAI,KAAK,QAAQ,IAAIV,IAAI,CAACU,IAAI,KAAK,OAAO,EAAE;QACnD;QACA,MAAMG,eAAe,GAAGF,YAAY,CAACX,IAAI,CAACU,IAAI,CAAC;QAC/C,IAAIG,eAAe,EAAE;UACnB,IAAIR,YAAY,CAACQ,eAAe,CAACC,EAAE,CAAC,EAAE;YACpCT,YAAY,CAACQ,eAAe,CAACC,EAAE,CAAC,CAACf,QAAQ,IAAI,CAAC;UAChD,CAAC,MAAM;YACLM,YAAY,CAACQ,eAAe,CAACC,EAAE,CAAC,GAAG;cACjC,GAAGD,eAAe;cAClBd,QAAQ,EAAE;YACZ,CAAC;UACH;QACF;;QAEA;QACAY,YAAY,CAACX,IAAI,CAACU,IAAI,CAAC,GAAG;UAAE,GAAGV,IAAI;UAAED,QAAQ,EAAE;QAAE,CAAC;MACpD;;MAEA;MACA,IAAIC,IAAI,CAACD,QAAQ,IAAI,CAAC,EAAE;QACtB,OAAOM,YAAY,CAACP,MAAM,CAAC;MAC7B,CAAC,MAAM;QACLO,YAAY,CAACP,MAAM,CAAC,GAAG;UACrB,GAAGE,IAAI;UACPD,QAAQ,EAAEC,IAAI,CAACD,QAAQ,GAAG;QAC5B,CAAC;MACH;MAEA,OAAO;QACL,GAAGK,SAAS;QACZH,MAAM,EAAE;UACN,GAAGG,SAAS,CAACH,MAAM;UACnBC,SAAS,EAAEG,YAAY;UACvBO,SAAS,EAAED;QACb;MACF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,OAAO;IACLT,SAAS,EAAE,CAAAP,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEM,MAAM,CAACC,SAAS,KAAI,CAAC,CAAC;IAC5CL,QAAQ;IACRW;EACF,CAAC;AACH,CAAC;AAACd,EAAA,CA5FWD,YAAY;EAAA,QACgBD,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}